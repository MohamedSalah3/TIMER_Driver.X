

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jul 20 00:43:28 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	functab,global,class=ENTRY,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139                           
   140                           	psect	idataBANK0
   141  0564                     __pidataBANK0:
   142                           
   143                           ;initializer for _Dio_configutation_B
   144  0564  3401               	retlw	1
   145  0565  34FF               	retlw	255
   146  0566  34FF               	retlw	255
   147  0567  3400               	retlw	0
   148                           
   149                           ;initializer for _Dio_configutation_A
   150  0568  3400               	retlw	0
   151  0569  3401               	retlw	1
   152  056A  3400               	retlw	0
   153  056B  3406               	retlw	6
   154                           
   155                           ;initializer for _Prescaler0
   156  056C  34FF               	retlw	255
   157                           
   158                           ;initializer for _I2c_Configuration_Eeprom
   159  056D  34E8               	retlw	232
   160  056E  3403               	retlw	3
   161  056F  3400               	retlw	0
   162  0570  3400               	retlw	0
   163  0571  3400               	retlw	0
   164                           
   165                           ;initializer for _Dio_configutation_C
   166  0572  3402               	retlw	2
   167  0573  3418               	retlw	24
   168  0574  3400               	retlw	0
   169  0575  3400               	retlw	0
   170                           
   171                           	psect	idataBANK1
   172  052A                     __pidataBANK1:
   173                           
   174                           ;initializer for _ADC_Cnfiguration
   175  052A  3400               	retlw	0
   176  052B  3401               	retlw	1
   177  052C  3440               	retlw	64
   178  052D  3480               	retlw	128
   179  052E  34BF               	retlw	191
   180                           
   181                           ;initializer for _Timer_Configuration1
   182  052F  3401               	retlw	1
   183  0530  3400               	retlw	0
   184  0531  3401               	retlw	1
   185  0532  3430               	retlw	48
   186  0533  340A               	retlw	low (fp__timer1_interrupt_ovfRoutine-i1fpbase)
   187                           
   188                           ;initializer for _Timer_Configuration2
   189  0534  3402               	retlw	2
   190  0535  3400               	retlw	0
   191  0536  3402               	retlw	2
   192  0537  3401               	retlw	1
   193  0538  3404               	retlw	low (fp__timer2_interrupt_ovfRoutine-i1fpbase)
   194                           
   195                           ;initializer for _Timer_Configuration0
   196  0539  3400               	retlw	0
   197  053A  34C7               	retlw	199
   198  053B  34A0               	retlw	160
   199  053C  3400               	retlw	0
   200  053D  3407               	retlw	low (fp__timer0_interrupt_ovfRoutine-i1fpbase)
   201                           
   202                           	psect	strings
   203  05E7                     __pstrings:
   204  05E7                     stringtab:
   205  05E7                     __stringtab:
   206  05E7                     stringcode:	
   207                           ;	String table - string pointers are 1 byte each
   208                           
   209  05E7                     stringdir:
   210  05E7  3005               	movlw	high stringdir
   211  05E8  008A               	movwf	10
   212  05E9  0804               	movf	4,w
   213  05EA  0A84               	incf	4,f
   214  05EB  0782               	addwf	2,f
   215  05EC                     __stringbase:
   216  05EC  3400               	retlw	0
   217  05ED                     __end_of__stringtab:
   218  05ED                     _TMU_Configuration:
   219  05ED  3401               	retlw	1
   220  05EE  3402               	retlw	2
   221  05EF                     __end_of_TMU_Configuration:
   222                           
   223                           	psect	nvBANK0
   224  006D                     __pnvBANK0:
   225  006D                     _is_init:
   226  006D                     	ds	1
   227                           
   228                           	psect	cinit
   229  0015                     start_initialization:	
   230                           ; #config settings
   231                           
   232  0015                     __initialization:
   233                           
   234                           ; Initialize objects allocated to BANK1
   235  0015  1383               	bcf	3,7	;select IRP bank0
   236  0016  30EF               	movlw	low (__pdataBANK1+20)
   237  0017  00FD               	movwf	btemp+-1
   238  0018  3005               	movlw	high __pidataBANK1
   239  0019  00FE               	movwf	btemp
   240  001A  302A               	movlw	low __pidataBANK1
   241  001B  00FF               	movwf	btemp+1
   242  001C  30DB               	movlw	low __pdataBANK1
   243  001D  0084               	movwf	4
   244  001E  120A  118A  2542  120A  118A  	fcall	init_ram0
   245                           
   246                           ; Initialize objects allocated to BANK0
   247  0023  306D               	movlw	low (__pdataBANK0+18)
   248  0024  00FD               	movwf	btemp+-1
   249  0025  3005               	movlw	high __pidataBANK0
   250  0026  00FE               	movwf	btemp
   251  0027  3064               	movlw	low __pidataBANK0
   252  0028  00FF               	movwf	btemp+1
   253  0029  305B               	movlw	low __pdataBANK0
   254  002A  0084               	movwf	4
   255  002B  120A  118A  2542  120A  118A  	fcall	init_ram0
   256                           
   257                           ; Clear objects allocated to BANK1
   258  0030  30A0               	movlw	low __pbssBANK1
   259  0031  0084               	movwf	4
   260  0032  30DB               	movlw	low (__pbssBANK1+59)
   261  0033  120A  118A  25EF  120A  118A  	fcall	clear_ram0
   262                           
   263                           ; Clear objects allocated to BANK0
   264  0038  3043               	movlw	low __pbssBANK0
   265  0039  0084               	movwf	4
   266  003A  305B               	movlw	low (__pbssBANK0+24)
   267  003B  120A  118A  25EF  120A  118A  	fcall	clear_ram0
   268                           
   269                           ; Clear objects allocated to COMMON
   270  0040  01F8               	clrf	__pbssCOMMON& (0+127)
   271  0041  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   272  0042  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   273  0043  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   274  0044  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   275  0045  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   276  0046                     end_of_initialization:	
   277                           ;End of C runtime variable initialization code
   278                           
   279  0046                     __end_of__initialization:
   280  0046  0183               	clrf	3
   281  0047  120A  118A  2971   	ljmp	_main	;jump to C main() function
   282                           
   283                           	psect	bssCOMMON
   284  0078                     __pbssCOMMON:
   285  0078                     _u8Excution_to_be_done:
   286  0078                     	ds	1
   287  0079                     _u8_FUN_index:
   288  0079                     	ds	1
   289  007A                     _u8_Is_Intialized:
   290  007A                     	ds	1
   291  007B                     _u8prepheral_int_enabled:
   292  007B                     	ds	1
   293  007C                     _u8global_int_enabled:
   294  007C                     	ds	1
   295  007D                     _TIMER0OVF_INT:
   296  007D                     	ds	1
   297                           
   298                           	psect	bssBANK0
   299  0043                     __pbssBANK0:
   300  0043                     _Dio_configutation_D:
   301  0043                     	ds	4
   302  0047                     pushButtonGetStatus@u8_S_button_status:
   303  0047                     	ds	3
   304  004A                     _u16_result_data:
   305  004A                     	ds	2
   306  004C                     _u16_data:
   307  004C                     	ds	2
   308  004E                     _stu8_increment:
   309  004E                     	ds	1
   310  004F                     _u8_Init_finished:
   311  004F                     	ds	1
   312  0050                     _ADC_INT:
   313  0050                     	ds	1
   314  0051                     _ret:
   315  0051                     	ds	1
   316  0052                     DIO_Write@first_powerup:
   317  0052                     	ds	1
   318  0053                     DIO_init@first_powerup_init:
   319  0053                     	ds	1
   320  0054                     _u8_timer2Count:
   321  0054                     	ds	1
   322  0055                     _Prescaler1:
   323  0055                     	ds	1
   324  0056                     _TIMER2OVF_INT:
   325  0056                     	ds	1
   326  0057                     _TIMER1OVF_INT:
   327  0057                     	ds	1
   328  0058                     pushButtonGetStatus@u8_Button_press:
   329  0058                     	ds	3
   330                           
   331                           	psect	dataBANK0
   332  005B                     __pdataBANK0:
   333  005B                     _Dio_configutation_B:
   334  005B                     	ds	4
   335  005F                     _Dio_configutation_A:
   336  005F                     	ds	4
   337  0063                     _Prescaler0:
   338  0063                     	ds	1
   339  0064                     _I2c_Configuration_Eeprom:
   340  0064                     	ds	5
   341  0069                     _Dio_configutation_C:
   342  0069                     	ds	4
   343                           
   344                           	psect	bssBANK1
   345  00A0                     __pbssBANK1:
   346  00A0                     _Buffer_Array:
   347  00A0                     	ds	28
   348  00BC                     _start:
   349  00BC                     	ds	8
   350  00C4                     _Timer_Deinit_Configuration2:
   351  00C4                     	ds	5
   352  00C9                     _Timer_Deinit_Configuration1:
   353  00C9                     	ds	5
   354  00CE                     _Start_status:
   355  00CE                     	ds	4
   356  00D2                     _Dio_configutation_E:
   357  00D2                     	ds	4
   358  00D6                     _Timer_Deinit_Configuration0:
   359  00D6                     	ds	5
   360                           
   361                           	psect	dataBANK1
   362  00DB                     __pdataBANK1:
   363  00DB                     _ADC_Cnfiguration:
   364  00DB                     	ds	5
   365  00E0                     _Timer_Configuration1:
   366  00E0                     	ds	5
   367  00E5                     _Timer_Configuration2:
   368  00E5                     	ds	5
   369  00EA                     _Timer_Configuration0:
   370  00EA                     	ds	5
   371                           
   372                           	psect	inittext
   373  053E                     init_fetch0:	
   374                           ;	Called with low address in FSR and high address in W
   375                           
   376  053E  087E               	movf	btemp,w
   377  053F  008A               	movwf	10
   378  0540  087F               	movf	btemp+1,w
   379  0541  0082               	movwf	2
   380  0542                     init_ram0:	
   381                           ;Called with:
   382                           ;	high address of idata address in btemp 
   383                           ;	low address of idata address in btemp+1 
   384                           ;	low address of data in FSR
   385                           ;	high address + 1 of data in btemp-1
   386                           
   387  0542  120A  118A  253E  120A  118A  	fcall	init_fetch0
   388  0547  0080               	movwf	0
   389  0548  0A84               	incf	4,f
   390  0549  0804               	movf	4,w
   391  054A  067D               	xorwf	btemp+-1,w
   392  054B  1903               	btfsc	3,2
   393  054C  3400               	retlw	0
   394  054D  0AFF               	incf	btemp+1,f
   395  054E  1903               	btfsc	3,2
   396  054F  0AFE               	incf	btemp,f
   397  0550  2D42               	goto	init_ram0
   398                           
   399                           	psect	clrtext
   400  05EF                     clear_ram0:	
   401                           ;	Called with FSR containing the base address, and
   402                           ;	W with the last address+1
   403                           
   404  05EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   405  05F0                     clrloop0:
   406  05F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   407  05F1  0A84               	incf	4,f	;increment pointer
   408  05F2  0604               	xorwf	4,w	;XOR with final address
   409  05F3  1903               	btfsc	3,2	;have we reached the end yet?
   410  05F4  3400               	retlw	0	;all done for this memory range, return
   411  05F5  0604               	xorwf	4,w	;XOR again to restore value
   412  05F6  2DF0               	goto	clrloop0	;do the next byte
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:
   416  0070                     ?_I2C_Hold:
   417  0070                     ?_adc_interrupt_routine:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_timer0_interrupt_ovfRoutine:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_timer0_interrupt_ovfRoutine:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_timer1_interrupt_ovfRoutine:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_timer1_interrupt_ovfRoutine:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_timer2_interrupt_ovfRoutine:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_timer2_interrupt_ovfRoutine:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_DIO_init:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_checkmyisr:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_clear_int_flag:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_clear_int_flag:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_I2C_Master_Write:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_I2C_Master_RepeatedStart:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_I2C_Begin:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_I2C_End:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_I2C_Read_Byte:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_I2C_NACK:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_main:	
   469                           ; 1 bytes @ 0x0
   470                           
   471                           
   472                           ; 2 bytes @ 0x0
   473  0070                     	ds	2
   474  0072                     clear_int_flag@ret_error:
   475                           
   476                           ; 1 bytes @ 0x2
   477  0072                     	ds	1
   478  0073                     clear_int_flag@u8_interrupt_prepherals:
   479                           
   480                           ; 1 bytes @ 0x3
   481  0073                     	ds	1
   482  0074                     ??_adc_interrupt_routine:
   483  0074                     ??_checkmyisr:	
   484                           ; 1 bytes @ 0x4
   485                           
   486                           
   487                           ; 1 bytes @ 0x4
   488  0074                     	ds	4
   489                           
   490                           	psect	cstackBANK0
   491  0020                     __pcstackBANK0:
   492  0020                     ?_SwDelay_ms:
   493  0020                     ??_I2C_Hold:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0020                     ?_SwDelay_us:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0020                     ??_DIO_init:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0020                     ??_I2C_Master_Write:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0020                     ??_I2C_Master_RepeatedStart:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0020                     ??_I2C_Begin:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0020                     ??_I2C_End:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0020                     ??_I2C_Read_Byte:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0020                     ??_I2C_NACK:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0020                     ?___lmul:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0020                     I2C_Master_Write@data:	
   524                           ; 4 bytes @ 0x0
   525                           
   526  0020                     SwDelay_ms@n:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0020                     SwDelay_us@n:	
   530                           ; 4 bytes @ 0x0
   531                           
   532  0020                     ___lmul@multiplier:	
   533                           ; 4 bytes @ 0x0
   534                           
   535                           
   536                           ; 4 bytes @ 0x0
   537  0020                     	ds	1
   538  0021                     ?_EEPROM_Write:
   539  0021                     ?_EEPROM_Read:	
   540                           ; 1 bytes @ 0x1
   541                           
   542  0021                     EEPROM_Write@add:	
   543                           ; 1 bytes @ 0x1
   544                           
   545  0021                     EEPROM_Read@add:	
   546                           ; 2 bytes @ 0x1
   547                           
   548                           
   549                           ; 2 bytes @ 0x1
   550  0021                     	ds	1
   551  0022                     DIO_init@ret_error:
   552                           
   553                           ; 1 bytes @ 0x2
   554  0022                     	ds	1
   555  0023                     ??_EEPROM_Read:
   556  0023                     DIO_init@DIO_info:	
   557                           ; 1 bytes @ 0x3
   558                           
   559  0023                     EEPROM_Write@data:	
   560                           ; 1 bytes @ 0x3
   561                           
   562  0023                     EEPROM_Read@Data:	
   563                           ; 1 bytes @ 0x3
   564                           
   565                           
   566                           ; 1 bytes @ 0x3
   567  0023                     	ds	1
   568  0024                     ??_EEPROM_Write:
   569  0024                     ??_SwDelay_ms:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0024                     ??_SwDelay_us:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     ___lmul@multiplicand:	
   576                           ; 1 bytes @ 0x4
   577                           
   578                           
   579                           ; 4 bytes @ 0x4
   580  0024                     	ds	4
   581  0028                     ??___lmul:
   582  0028                     SwDelay_ms@counter_256:	
   583                           ; 1 bytes @ 0x8
   584                           
   585                           
   586                           ; 1 bytes @ 0x8
   587  0028                     	ds	1
   588  0029                     SwDelay_ms@counter_21:
   589  0029                     ___lmul@product:	
   590                           ; 1 bytes @ 0x9
   591                           
   592                           
   593                           ; 4 bytes @ 0x9
   594  0029                     	ds	1
   595  002A                     ?_ADC_READ:
   596                           
   597                           ; 2 bytes @ 0xA
   598  002A                     	ds	2
   599  002C                     ??_ADC_READ:
   600                           
   601                           ; 1 bytes @ 0xC
   602  002C                     	ds	1
   603  002D                     ?___lldiv:
   604  002D                     ___lldiv@divisor:	
   605                           ; 4 bytes @ 0xD
   606                           
   607                           
   608                           ; 4 bytes @ 0xD
   609  002D                     	ds	4
   610  0031                     ___lldiv@dividend:
   611                           
   612                           ; 4 bytes @ 0x11
   613  0031                     	ds	4
   614  0035                     ??___lldiv:
   615                           
   616                           ; 1 bytes @ 0x15
   617  0035                     	ds	1
   618  0036                     ___lldiv@quotient:
   619                           
   620                           ; 4 bytes @ 0x16
   621  0036                     	ds	4
   622  003A                     ___lldiv@counter:
   623                           
   624                           ; 1 bytes @ 0x1A
   625  003A                     	ds	1
   626  003B                     ?_I2C_Init:
   627  003B                     ??_I2C_Init:	
   628                           ; 1 bytes @ 0x1B
   629                           
   630                           
   631                           ; 1 bytes @ 0x1B
   632  003B                     	ds	4
   633  003F                     I2C_Init@i2c_info:
   634                           
   635                           ; 1 bytes @ 0x1F
   636  003F                     	ds	1
   637  0040                     ??_main:
   638  0040                     main@Data:	
   639                           ; 1 bytes @ 0x20
   640                           
   641                           
   642                           ; 1 bytes @ 0x20
   643  0040                     	ds	1
   644  0041                     main@Address:
   645                           
   646                           ; 2 bytes @ 0x21
   647  0041                     	ds	2
   648                           
   649                           	psect	maintext
   650  0171                     __pmaintext:	
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 13 in file "main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  Address         2   33[BANK0 ] unsigned int 
   661 ;;  Data            1   32[BANK0 ] unsigned char 
   662 ;; Return value:  Size  Location     Type
   663 ;;                  2  241[None  ] int 
   664 ;; Registers used:
   665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : B00/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       3       0       0       0
   673 ;;      Temps:          0       0       0       0       0
   674 ;;      Totals:         0       3       0       0       0
   675 ;;Total ram usage:        3 bytes
   676 ;; Hardware stack levels required when called:    6
   677 ;; This function calls:
   678 ;;		_ADC_READ
   679 ;;		_EEPROM_Read
   680 ;;		_EEPROM_Write
   681 ;;		_I2C_Init
   682 ;;		_SwDelay_ms
   683 ;; This function is called by:
   684 ;;		Startup code after reset
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _main
   690  0171                     _main:
   691  0171                     l3265:	
   692                           ;incstack = 0
   693                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   694                           
   695                           
   696                           ;main.c: 19:   I2C_Init(&I2c_Configuration_Eeprom);
   697  0171  3064               	movlw	(low (_I2c_Configuration_Eeprom| 0))& (0+255)
   698  0172  120A  118A  22B2  120A  118A  	fcall	_I2C_Init
   699  0177                     l3267:
   700                           
   701                           ;main.c: 21:   unsigned int Address = 0x0020;
   702  0177  3020               	movlw	32
   703  0178  1283               	bcf	3,5	;RP0=0, select bank0
   704  0179  1303               	bcf	3,6	;RP1=0, select bank0
   705  017A  00C1               	movwf	main@Address
   706  017B  3000               	movlw	0
   707  017C  00C2               	movwf	main@Address+1
   708  017D                     l3269:
   709                           
   710                           ;main.c: 22:   unsigned char Data = 0x04;
   711  017D  3004               	movlw	4
   712  017E  00FF               	movwf	btemp+1
   713  017F  087F               	movf	btemp+1,w
   714  0180  00C0               	movwf	main@Data
   715  0181                     l3271:
   716                           
   717                           ;main.c: 23:   EEPROM_Write(Address++, Data++);
   718  0181  3020               	movlw	32
   719  0182  00A1               	movwf	EEPROM_Write@add
   720  0183  3000               	movlw	0
   721  0184  00A2               	movwf	EEPROM_Write@add+1
   722  0185  3004               	movlw	4
   723  0186  00FF               	movwf	btemp+1
   724  0187  087F               	movf	btemp+1,w
   725  0188  00A3               	movwf	EEPROM_Write@data
   726  0189  120A  118A  24B3  120A  118A  	fcall	_EEPROM_Write
   727  018E                     l3273:
   728  018E  3001               	movlw	1
   729  018F  00FF               	movwf	btemp+1
   730  0190  087F               	movf	btemp+1,w
   731  0191  1283               	bcf	3,5	;RP0=0, select bank0
   732  0192  1303               	bcf	3,6	;RP1=0, select bank0
   733  0193  07C0               	addwf	main@Data,f
   734  0194                     l3275:
   735  0194  3001               	movlw	1
   736  0195  07C1               	addwf	main@Address,f
   737  0196  1803               	skipnc
   738  0197  0AC2               	incf	main@Address+1,f
   739  0198  3000               	movlw	0
   740  0199  07C2               	addwf	main@Address+1,f
   741  019A                     l3277:
   742                           
   743                           ;main.c: 24:   EEPROM_Write(Address++, Data++);
   744  019A  0842               	movf	main@Address+1,w
   745  019B  00A2               	movwf	EEPROM_Write@add+1
   746  019C  0841               	movf	main@Address,w
   747  019D  00A1               	movwf	EEPROM_Write@add
   748  019E  0840               	movf	main@Data,w
   749  019F  00FF               	movwf	btemp+1
   750  01A0  087F               	movf	btemp+1,w
   751  01A1  00A3               	movwf	EEPROM_Write@data
   752  01A2  120A  118A  24B3  120A  118A  	fcall	_EEPROM_Write
   753  01A7                     l3279:
   754  01A7  3001               	movlw	1
   755  01A8  00FF               	movwf	btemp+1
   756  01A9  087F               	movf	btemp+1,w
   757  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   758  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   759  01AC  07C0               	addwf	main@Data,f
   760  01AD                     l3281:
   761  01AD  3001               	movlw	1
   762  01AE  07C1               	addwf	main@Address,f
   763  01AF  1803               	skipnc
   764  01B0  0AC2               	incf	main@Address+1,f
   765  01B1  3000               	movlw	0
   766  01B2  07C2               	addwf	main@Address+1,f
   767  01B3                     l3283:
   768                           
   769                           ;main.c: 25:   EEPROM_Write(Address, Data);
   770  01B3  0842               	movf	main@Address+1,w
   771  01B4  00A2               	movwf	EEPROM_Write@add+1
   772  01B5  0841               	movf	main@Address,w
   773  01B6  00A1               	movwf	EEPROM_Write@add
   774  01B7  0840               	movf	main@Data,w
   775  01B8  00FF               	movwf	btemp+1
   776  01B9  087F               	movf	btemp+1,w
   777  01BA  00A3               	movwf	EEPROM_Write@data
   778  01BB  120A  118A  24B3  120A  118A  	fcall	_EEPROM_Write
   779  01C0                     l3285:
   780                           
   781                           ;main.c: 26:   SwDelay_ms(10);
   782  01C0  3000               	movlw	0
   783  01C1  1283               	bcf	3,5	;RP0=0, select bank0
   784  01C2  1303               	bcf	3,6	;RP1=0, select bank0
   785  01C3  00A3               	movwf	SwDelay_ms@n+3
   786  01C4  3000               	movlw	0
   787  01C5  00A2               	movwf	SwDelay_ms@n+2
   788  01C6  3000               	movlw	0
   789  01C7  00A1               	movwf	SwDelay_ms@n+1
   790  01C8  300A               	movlw	10
   791  01C9  00A0               	movwf	SwDelay_ms@n
   792  01CA  120A  118A  23FC  120A  118A  	fcall	_SwDelay_ms
   793  01CF                     l3287:
   794                           
   795                           ;main.c: 27:   Address = 0x0020;
   796  01CF  3020               	movlw	32
   797  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   798  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   799  01D2  00C1               	movwf	main@Address
   800  01D3  3000               	movlw	0
   801  01D4  00C2               	movwf	main@Address+1
   802  01D5                     l3289:
   803                           
   804                           ;main.c: 28:   *((reg_type8_t)(0x0088)) = 0x00;
   805  01D5  1683               	bsf	3,5	;RP0=1, select bank1
   806  01D6  1303               	bcf	3,6	;RP1=0, select bank1
   807  01D7  0188               	clrf	8	;volatile
   808  01D8                     l3291:
   809                           
   810                           ;main.c: 29:   *((reg_type8_t)(0x0008)) = EEPROM_Read(Address++);
   811  01D8  3020               	movlw	32
   812  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   813  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   814  01DB  00A1               	movwf	EEPROM_Read@add
   815  01DC  3000               	movlw	0
   816  01DD  00A2               	movwf	EEPROM_Read@add+1
   817  01DE  120A  118A  236B  120A  118A  	fcall	_EEPROM_Read
   818  01E3  00FF               	movwf	btemp+1
   819  01E4  087F               	movf	btemp+1,w
   820  01E5  1283               	bcf	3,5	;RP0=0, select bank0
   821  01E6  1303               	bcf	3,6	;RP1=0, select bank0
   822  01E7  0088               	movwf	8	;volatile
   823  01E8                     l3293:
   824  01E8  3001               	movlw	1
   825  01E9  07C1               	addwf	main@Address,f
   826  01EA  1803               	skipnc
   827  01EB  0AC2               	incf	main@Address+1,f
   828  01EC  3000               	movlw	0
   829  01ED  07C2               	addwf	main@Address+1,f
   830  01EE                     l3295:
   831                           
   832                           ;main.c: 30:   SwDelay_ms(1000);
   833  01EE  3000               	movlw	0
   834  01EF  00A3               	movwf	SwDelay_ms@n+3
   835  01F0  3000               	movlw	0
   836  01F1  00A2               	movwf	SwDelay_ms@n+2
   837  01F2  3003               	movlw	3
   838  01F3  00A1               	movwf	SwDelay_ms@n+1
   839  01F4  30E8               	movlw	232
   840  01F5  00A0               	movwf	SwDelay_ms@n
   841  01F6  120A  118A  23FC  120A  118A  	fcall	_SwDelay_ms
   842  01FB                     l3297:
   843                           
   844                           ;main.c: 31:   *((reg_type8_t)(0x0008)) = EEPROM_Read(Address++);
   845  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   846  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   847  01FD  0842               	movf	main@Address+1,w
   848  01FE  00A2               	movwf	EEPROM_Read@add+1
   849  01FF  0841               	movf	main@Address,w
   850  0200  00A1               	movwf	EEPROM_Read@add
   851  0201  120A  118A  236B  120A  118A  	fcall	_EEPROM_Read
   852  0206  00FF               	movwf	btemp+1
   853  0207  087F               	movf	btemp+1,w
   854  0208  1283               	bcf	3,5	;RP0=0, select bank0
   855  0209  1303               	bcf	3,6	;RP1=0, select bank0
   856  020A  0088               	movwf	8	;volatile
   857  020B                     l3299:
   858  020B  3001               	movlw	1
   859  020C  07C1               	addwf	main@Address,f
   860  020D  1803               	skipnc
   861  020E  0AC2               	incf	main@Address+1,f
   862  020F  3000               	movlw	0
   863  0210  07C2               	addwf	main@Address+1,f
   864  0211                     l3301:
   865                           
   866                           ;main.c: 32:   SwDelay_ms(1000);
   867  0211  3000               	movlw	0
   868  0212  00A3               	movwf	SwDelay_ms@n+3
   869  0213  3000               	movlw	0
   870  0214  00A2               	movwf	SwDelay_ms@n+2
   871  0215  3003               	movlw	3
   872  0216  00A1               	movwf	SwDelay_ms@n+1
   873  0217  30E8               	movlw	232
   874  0218  00A0               	movwf	SwDelay_ms@n
   875  0219  120A  118A  23FC  120A  118A  	fcall	_SwDelay_ms
   876  021E                     l3303:
   877                           
   878                           ;main.c: 33:   *((reg_type8_t)(0x0008)) = EEPROM_Read(Address);
   879  021E  1283               	bcf	3,5	;RP0=0, select bank0
   880  021F  1303               	bcf	3,6	;RP1=0, select bank0
   881  0220  0842               	movf	main@Address+1,w
   882  0221  00A2               	movwf	EEPROM_Read@add+1
   883  0222  0841               	movf	main@Address,w
   884  0223  00A1               	movwf	EEPROM_Read@add
   885  0224  120A  118A  236B  120A  118A  	fcall	_EEPROM_Read
   886  0229  00FF               	movwf	btemp+1
   887  022A  087F               	movf	btemp+1,w
   888  022B  1283               	bcf	3,5	;RP0=0, select bank0
   889  022C  1303               	bcf	3,6	;RP1=0, select bank0
   890  022D  0088               	movwf	8	;volatile
   891  022E                     l3305:
   892                           
   893                           ;main.c: 34:   SwDelay_ms(1000);
   894  022E  3000               	movlw	0
   895  022F  00A3               	movwf	SwDelay_ms@n+3
   896  0230  3000               	movlw	0
   897  0231  00A2               	movwf	SwDelay_ms@n+2
   898  0232  3003               	movlw	3
   899  0233  00A1               	movwf	SwDelay_ms@n+1
   900  0234  30E8               	movlw	232
   901  0235  00A0               	movwf	SwDelay_ms@n
   902  0236  120A  118A  23FC  120A  118A  	fcall	_SwDelay_ms
   903  023B                     l3307:
   904                           
   905                           ;main.c: 42:   u16_data=ADC_READ();
   906  023B  120A  118A  2478  120A  118A  	fcall	_ADC_READ
   907  0240  1283               	bcf	3,5	;RP0=0, select bank0
   908  0241  1303               	bcf	3,6	;RP1=0, select bank0
   909  0242  082B               	movf	?_ADC_READ+1,w
   910  0243  00CD               	movwf	_u16_data+1
   911  0244  082A               	movf	?_ADC_READ,w
   912  0245  00CC               	movwf	_u16_data
   913  0246  2A3B               	goto	l3307
   914  0247  120A  118A  2812   	ljmp	start
   915  024A                     __end_of_main:
   916                           
   917                           	psect	text1
   918  02B2                     __ptext1:	
   919 ;; *************** function _I2C_Init *****************
   920 ;; Defined at:
   921 ;;		line 6 in file "I2C.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  i2c_info        1    wreg     PTR struct .
   924 ;;		 -> I2c_Configuration_Eeprom(5), 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  i2c_info        1   31[BANK0 ] PTR struct .
   927 ;;		 -> I2c_Configuration_Eeprom(5), 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       1       0       0       0
   939 ;;      Temps:          0       4       0       0       0
   940 ;;      Totals:         0       5       0       0       0
   941 ;;Total ram usage:        5 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    4
   944 ;; This function calls:
   945 ;;		_DIO_init
   946 ;;		___lldiv
   947 ;;		___lmul
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _I2C_Init
   955  02B2                     _I2C_Init:
   956                           
   957                           ;incstack = 0
   958                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   959                           ;I2C_Init@i2c_info stored from wreg
   960  02B2  1283               	bcf	3,5	;RP0=0, select bank0
   961  02B3  1303               	bcf	3,6	;RP1=0, select bank0
   962  02B4  00BF               	movwf	I2C_Init@i2c_info
   963  02B5                     l3255:
   964                           
   965                           ;I2C.c: 6: void I2C_Init(I2C_ConfigType *i2c_info);I2C.c: 7: {;I2C.c: 8: DIO_init(&Dio_c
      +                          onfigutation_C);
   966  02B5  3069               	movlw	(low (_Dio_configutation_C| 0))& (0+255)
   967  02B6  120A  118A  205D  120A  118A  	fcall	_DIO_init
   968  02BB                     l3257:
   969                           
   970                           ;I2C.c: 9: *((reg_type8_t)(0x0014)) |=0x08|0x20;
   971  02BB  3028               	movlw	40
   972  02BC  00FF               	movwf	btemp+1
   973  02BD  087F               	movf	btemp+1,w
   974  02BE  1283               	bcf	3,5	;RP0=0, select bank0
   975  02BF  1303               	bcf	3,6	;RP1=0, select bank0
   976  02C0  0494               	iorwf	20,f	;volatile
   977  02C1                     l3259:
   978                           
   979                           ;I2C.c: 10: *((reg_type8_t)(0x0091)) =0x00;
   980  02C1  1683               	bsf	3,5	;RP0=1, select bank1
   981  02C2  1303               	bcf	3,6	;RP1=0, select bank1
   982  02C3  0191               	clrf	17	;volatile
   983  02C4                     l3261:
   984                           
   985                           ;I2C.c: 11: *((reg_type8_t)(0x0093))=(8000000/(4 * (i2c_info->comm_freq) * 100))-1;
   986  02C4  1283               	bcf	3,5	;RP0=0, select bank0
   987  02C5  1303               	bcf	3,6	;RP1=0, select bank0
   988  02C6  083F               	movf	I2C_Init@i2c_info,w
   989  02C7  0084               	movwf	4
   990  02C8  1383               	bcf	3,7	;select IRP bank0
   991  02C9  0800               	movf	0,w
   992  02CA  00BB               	movwf	??_I2C_Init
   993  02CB  0A84               	incf	4,f
   994  02CC  0800               	movf	0,w
   995  02CD  00BC               	movwf	??_I2C_Init+1
   996  02CE  0A84               	incf	4,f
   997  02CF  0800               	movf	0,w
   998  02D0  00BD               	movwf	??_I2C_Init+2
   999  02D1  0A84               	incf	4,f
  1000  02D2  0800               	movf	0,w
  1001  02D3  00BE               	movwf	??_I2C_Init+3
  1002  02D4  3002               	movlw	2
  1003  02D5                     u1275:
  1004  02D5  1003               	clrc
  1005  02D6  0DBB               	rlf	??_I2C_Init,f
  1006  02D7  0DBC               	rlf	??_I2C_Init+1,f
  1007  02D8  0DBD               	rlf	??_I2C_Init+2,f
  1008  02D9  0DBE               	rlf	??_I2C_Init+3,f
  1009  02DA                     u1270:
  1010  02DA  3EFF               	addlw	-1
  1011  02DB  1D03               	skipz
  1012  02DC  2AD5               	goto	u1275
  1013  02DD  083E               	movf	??_I2C_Init+3,w
  1014  02DE  00A3               	movwf	___lmul@multiplier+3
  1015  02DF  083D               	movf	??_I2C_Init+2,w
  1016  02E0  00A2               	movwf	___lmul@multiplier+2
  1017  02E1  083C               	movf	??_I2C_Init+1,w
  1018  02E2  00A1               	movwf	___lmul@multiplier+1
  1019  02E3  083B               	movf	??_I2C_Init,w
  1020  02E4  00A0               	movwf	___lmul@multiplier
  1021  02E5  3000               	movlw	0
  1022  02E6  00A7               	movwf	___lmul@multiplicand+3
  1023  02E7  3000               	movlw	0
  1024  02E8  00A6               	movwf	___lmul@multiplicand+2
  1025  02E9  3000               	movlw	0
  1026  02EA  00A5               	movwf	___lmul@multiplicand+1
  1027  02EB  3064               	movlw	100
  1028  02EC  00A4               	movwf	___lmul@multiplicand
  1029  02ED  120A  118A  23B4  120A  118A  	fcall	___lmul
  1030  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1031  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1032  02F4  0823               	movf	?___lmul+3,w
  1033  02F5  00B0               	movwf	___lldiv@divisor+3
  1034  02F6  0822               	movf	?___lmul+2,w
  1035  02F7  00AF               	movwf	___lldiv@divisor+2
  1036  02F8  0821               	movf	?___lmul+1,w
  1037  02F9  00AE               	movwf	___lldiv@divisor+1
  1038  02FA  0820               	movf	?___lmul,w
  1039  02FB  00AD               	movwf	___lldiv@divisor
  1040  02FC  3000               	movlw	0
  1041  02FD  00B4               	movwf	___lldiv@dividend+3
  1042  02FE  307A               	movlw	122
  1043  02FF  00B3               	movwf	___lldiv@dividend+2
  1044  0300  3012               	movlw	18
  1045  0301  00B2               	movwf	___lldiv@dividend+1
  1046  0302  3000               	movlw	0
  1047  0303  00B1               	movwf	___lldiv@dividend
  1048  0304  120A  118A  224A  120A  118A  	fcall	___lldiv
  1049  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1050  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1051  030B  082D               	movf	?___lldiv,w
  1052  030C  3EFF               	addlw	255
  1053  030D  00FF               	movwf	btemp+1
  1054  030E  087F               	movf	btemp+1,w
  1055  030F  1683               	bsf	3,5	;RP0=1, select bank1
  1056  0310  1303               	bcf	3,6	;RP1=0, select bank1
  1057  0311  0093               	movwf	19	;volatile
  1058  0312                     l3263:
  1059                           
  1060                           ;I2C.c: 12: *((reg_type8_t)(0x0094)) =0x00;
  1061  0312  0194               	clrf	20	;volatile
  1062  0313                     l333:
  1063  0313  0008               	return
  1064  0314                     __end_of_I2C_Init:
  1065                           
  1066                           	psect	text2
  1067  03B4                     __ptext2:	
  1068 ;; *************** function ___lmul *****************
  1069 ;; Defined at:
  1070 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1073 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  product         4    9[BANK0 ] unsigned long 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  4    0[BANK0 ] unsigned long 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       8       0       0       0
  1086 ;;      Locals:         0       4       0       0       0
  1087 ;;      Temps:          0       1       0       0       0
  1088 ;;      Totals:         0      13       0       0       0
  1089 ;;Total ram usage:       13 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    3
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_I2C_Init
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function ___lmul
  1101  03B4                     ___lmul:
  1102  03B4                     l2453:	
  1103                           ;incstack = 0
  1104                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1105                           
  1106  03B4  3000               	movlw	0
  1107  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1108  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1109  03B7  00AC               	movwf	___lmul@product+3
  1110  03B8  3000               	movlw	0
  1111  03B9  00AB               	movwf	___lmul@product+2
  1112  03BA  3000               	movlw	0
  1113  03BB  00AA               	movwf	___lmul@product+1
  1114  03BC  3000               	movlw	0
  1115  03BD  00A9               	movwf	___lmul@product
  1116  03BE                     l2455:
  1117  03BE  1C20               	btfss	___lmul@multiplier,0
  1118  03BF  2BC1               	goto	u811
  1119  03C0  2BC2               	goto	u810
  1120  03C1                     u811:
  1121  03C1  2BD9               	goto	l2459
  1122  03C2                     u810:
  1123  03C2                     l2457:
  1124  03C2  0824               	movf	___lmul@multiplicand,w
  1125  03C3  07A9               	addwf	___lmul@product,f
  1126  03C4  0825               	movf	___lmul@multiplicand+1,w
  1127  03C5  1103               	clrz
  1128  03C6  1803               	skipnc
  1129  03C7  3E01               	addlw	1
  1130  03C8  1903               	skipnz
  1131  03C9  2BCB               	goto	u821
  1132  03CA  07AA               	addwf	___lmul@product+1,f
  1133  03CB                     u821:
  1134  03CB  0826               	movf	___lmul@multiplicand+2,w
  1135  03CC  1103               	clrz
  1136  03CD  1803               	skipnc
  1137  03CE  3E01               	addlw	1
  1138  03CF  1903               	skipnz
  1139  03D0  2BD2               	goto	u822
  1140  03D1  07AB               	addwf	___lmul@product+2,f
  1141  03D2                     u822:
  1142  03D2  0827               	movf	___lmul@multiplicand+3,w
  1143  03D3  1103               	clrz
  1144  03D4  1803               	skipnc
  1145  03D5  3E01               	addlw	1
  1146  03D6  1903               	skipnz
  1147  03D7  2BD9               	goto	u823
  1148  03D8  07AC               	addwf	___lmul@product+3,f
  1149  03D9                     u823:
  1150  03D9                     l2459:
  1151  03D9  3001               	movlw	1
  1152  03DA  00A8               	movwf	??___lmul
  1153  03DB                     u835:
  1154  03DB  1003               	clrc
  1155  03DC  0DA4               	rlf	___lmul@multiplicand,f
  1156  03DD  0DA5               	rlf	___lmul@multiplicand+1,f
  1157  03DE  0DA6               	rlf	___lmul@multiplicand+2,f
  1158  03DF  0DA7               	rlf	___lmul@multiplicand+3,f
  1159  03E0  0BA8               	decfsz	??___lmul,f
  1160  03E1  2BDB               	goto	u835
  1161  03E2                     l2461:
  1162  03E2  3001               	movlw	1
  1163  03E3                     u845:
  1164  03E3  1003               	clrc
  1165  03E4  0CA3               	rrf	___lmul@multiplier+3,f
  1166  03E5  0CA2               	rrf	___lmul@multiplier+2,f
  1167  03E6  0CA1               	rrf	___lmul@multiplier+1,f
  1168  03E7  0CA0               	rrf	___lmul@multiplier,f
  1169  03E8  3EFF               	addlw	-1
  1170  03E9  1D03               	skipz
  1171  03EA  2BE3               	goto	u845
  1172  03EB  0823               	movf	___lmul@multiplier+3,w
  1173  03EC  0422               	iorwf	___lmul@multiplier+2,w
  1174  03ED  0421               	iorwf	___lmul@multiplier+1,w
  1175  03EE  0420               	iorwf	___lmul@multiplier,w
  1176  03EF  1D03               	skipz
  1177  03F0  2BF2               	goto	u851
  1178  03F1  2BF3               	goto	u850
  1179  03F2                     u851:
  1180  03F2  2BBE               	goto	l2455
  1181  03F3                     u850:
  1182  03F3                     l2463:
  1183  03F3  082C               	movf	___lmul@product+3,w
  1184  03F4  00A3               	movwf	?___lmul+3
  1185  03F5  082B               	movf	___lmul@product+2,w
  1186  03F6  00A2               	movwf	?___lmul+2
  1187  03F7  082A               	movf	___lmul@product+1,w
  1188  03F8  00A1               	movwf	?___lmul+1
  1189  03F9  0829               	movf	___lmul@product,w
  1190  03FA  00A0               	movwf	?___lmul
  1191  03FB                     l641:
  1192  03FB  0008               	return
  1193  03FC                     __end_of___lmul:
  1194                           
  1195                           	psect	text3
  1196  024A                     __ptext3:	
  1197 ;; *************** function ___lldiv *****************
  1198 ;; Defined at:
  1199 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  divisor         4   13[BANK0 ] unsigned long 
  1202 ;;  dividend        4   17[BANK0 ] unsigned long 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  quotient        4   22[BANK0 ] unsigned long 
  1205 ;;  counter         1   26[BANK0 ] unsigned char 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  4   13[BANK0 ] unsigned long 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0, btemp+1
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         0       8       0       0       0
  1216 ;;      Locals:         0       5       0       0       0
  1217 ;;      Temps:          0       1       0       0       0
  1218 ;;      Totals:         0      14       0       0       0
  1219 ;;Total ram usage:       14 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    3
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_I2C_Init
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function ___lldiv
  1231  024A                     ___lldiv:
  1232  024A                     l2467:	
  1233                           ;incstack = 0
  1234                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1235                           
  1236  024A  3000               	movlw	0
  1237  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1238  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1239  024D  00B9               	movwf	___lldiv@quotient+3
  1240  024E  3000               	movlw	0
  1241  024F  00B8               	movwf	___lldiv@quotient+2
  1242  0250  3000               	movlw	0
  1243  0251  00B7               	movwf	___lldiv@quotient+1
  1244  0252  3000               	movlw	0
  1245  0253  00B6               	movwf	___lldiv@quotient
  1246  0254  0830               	movf	___lldiv@divisor+3,w
  1247  0255  042F               	iorwf	___lldiv@divisor+2,w
  1248  0256  042E               	iorwf	___lldiv@divisor+1,w
  1249  0257  042D               	iorwf	___lldiv@divisor,w
  1250  0258  1903               	skipnz
  1251  0259  2A5B               	goto	u861
  1252  025A  2A5C               	goto	u860
  1253  025B                     u861:
  1254  025B  2AA9               	goto	l2489
  1255  025C                     u860:
  1256  025C                     l2469:
  1257  025C  01BA               	clrf	___lldiv@counter
  1258  025D  0ABA               	incf	___lldiv@counter,f
  1259  025E  2A6C               	goto	l2475
  1260  025F                     l2471:
  1261  025F  3001               	movlw	1
  1262  0260  00B5               	movwf	??___lldiv
  1263  0261                     u875:
  1264  0261  1003               	clrc
  1265  0262  0DAD               	rlf	___lldiv@divisor,f
  1266  0263  0DAE               	rlf	___lldiv@divisor+1,f
  1267  0264  0DAF               	rlf	___lldiv@divisor+2,f
  1268  0265  0DB0               	rlf	___lldiv@divisor+3,f
  1269  0266  0BB5               	decfsz	??___lldiv,f
  1270  0267  2A61               	goto	u875
  1271  0268                     l2473:
  1272  0268  3001               	movlw	1
  1273  0269  00FF               	movwf	btemp+1
  1274  026A  087F               	movf	btemp+1,w
  1275  026B  07BA               	addwf	___lldiv@counter,f
  1276  026C                     l2475:
  1277  026C  1FB0               	btfss	___lldiv@divisor+3,7
  1278  026D  2A6F               	goto	u881
  1279  026E  2A70               	goto	u880
  1280  026F                     u881:
  1281  026F  2A5F               	goto	l2471
  1282  0270                     u880:
  1283  0270                     l2477:
  1284  0270  3001               	movlw	1
  1285  0271  00B5               	movwf	??___lldiv
  1286  0272                     u895:
  1287  0272  1003               	clrc
  1288  0273  0DB6               	rlf	___lldiv@quotient,f
  1289  0274  0DB7               	rlf	___lldiv@quotient+1,f
  1290  0275  0DB8               	rlf	___lldiv@quotient+2,f
  1291  0276  0DB9               	rlf	___lldiv@quotient+3,f
  1292  0277  0BB5               	decfsz	??___lldiv,f
  1293  0278  2A72               	goto	u895
  1294  0279                     l2479:
  1295  0279  0830               	movf	___lldiv@divisor+3,w
  1296  027A  0234               	subwf	___lldiv@dividend+3,w
  1297  027B  1D03               	skipz
  1298  027C  2A87               	goto	u905
  1299  027D  082F               	movf	___lldiv@divisor+2,w
  1300  027E  0233               	subwf	___lldiv@dividend+2,w
  1301  027F  1D03               	skipz
  1302  0280  2A87               	goto	u905
  1303  0281  082E               	movf	___lldiv@divisor+1,w
  1304  0282  0232               	subwf	___lldiv@dividend+1,w
  1305  0283  1D03               	skipz
  1306  0284  2A87               	goto	u905
  1307  0285  082D               	movf	___lldiv@divisor,w
  1308  0286  0231               	subwf	___lldiv@dividend,w
  1309  0287                     u905:
  1310  0287  1C03               	skipc
  1311  0288  2A8A               	goto	u901
  1312  0289  2A8B               	goto	u900
  1313  028A                     u901:
  1314  028A  2A9A               	goto	l2485
  1315  028B                     u900:
  1316  028B                     l2481:
  1317  028B  082D               	movf	___lldiv@divisor,w
  1318  028C  02B1               	subwf	___lldiv@dividend,f
  1319  028D  082E               	movf	___lldiv@divisor+1,w
  1320  028E  1C03               	skipc
  1321  028F  0F2E               	incfsz	___lldiv@divisor+1,w
  1322  0290  02B2               	subwf	___lldiv@dividend+1,f
  1323  0291  082F               	movf	___lldiv@divisor+2,w
  1324  0292  1C03               	skipc
  1325  0293  0F2F               	incfsz	___lldiv@divisor+2,w
  1326  0294  02B3               	subwf	___lldiv@dividend+2,f
  1327  0295  0830               	movf	___lldiv@divisor+3,w
  1328  0296  1C03               	skipc
  1329  0297  0F30               	incfsz	___lldiv@divisor+3,w
  1330  0298  02B4               	subwf	___lldiv@dividend+3,f
  1331  0299                     l2483:
  1332  0299  1436               	bsf	___lldiv@quotient,0
  1333  029A                     l2485:
  1334  029A  3001               	movlw	1
  1335  029B                     u915:
  1336  029B  1003               	clrc
  1337  029C  0CB0               	rrf	___lldiv@divisor+3,f
  1338  029D  0CAF               	rrf	___lldiv@divisor+2,f
  1339  029E  0CAE               	rrf	___lldiv@divisor+1,f
  1340  029F  0CAD               	rrf	___lldiv@divisor,f
  1341  02A0  3EFF               	addlw	-1
  1342  02A1  1D03               	skipz
  1343  02A2  2A9B               	goto	u915
  1344  02A3                     l2487:
  1345  02A3  3001               	movlw	1
  1346  02A4  02BA               	subwf	___lldiv@counter,f
  1347  02A5  1D03               	btfss	3,2
  1348  02A6  2AA8               	goto	u921
  1349  02A7  2AA9               	goto	u920
  1350  02A8                     u921:
  1351  02A8  2A70               	goto	l2477
  1352  02A9                     u920:
  1353  02A9                     l2489:
  1354  02A9  0839               	movf	___lldiv@quotient+3,w
  1355  02AA  00B0               	movwf	?___lldiv+3
  1356  02AB  0838               	movf	___lldiv@quotient+2,w
  1357  02AC  00AF               	movwf	?___lldiv+2
  1358  02AD  0837               	movf	___lldiv@quotient+1,w
  1359  02AE  00AE               	movwf	?___lldiv+1
  1360  02AF  0836               	movf	___lldiv@quotient,w
  1361  02B0  00AD               	movwf	?___lldiv
  1362  02B1                     l663:
  1363  02B1  0008               	return
  1364  02B2                     __end_of___lldiv:
  1365                           
  1366                           	psect	text4
  1367  005D                     __ptext4:	
  1368 ;; *************** function _DIO_init *****************
  1369 ;; Defined at:
  1370 ;;		line 11 in file "DIO.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  DIO_info        1    wreg     PTR struct DIO_Cfg_s
  1373 ;;		 -> Dio_configutation_C(4), 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  DIO_info        1    3[BANK0 ] PTR struct DIO_Cfg_s
  1376 ;;		 -> Dio_configutation_C(4), 
  1377 ;;  ret_error       1    2[BANK0 ] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      unsigned char 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       2       0       0       0
  1389 ;;      Temps:          0       2       0       0       0
  1390 ;;      Totals:         0       4       0       0       0
  1391 ;;Total ram usage:        4 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    3
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_I2C_Init
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _DIO_init
  1403  005D                     _DIO_init:
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in _DIO_init: [wreg-fsr0h+status,2+status,0+btemp+1]
  1407                           ;DIO_init@DIO_info stored from wreg
  1408  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1409  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1410  005F  00A3               	movwf	DIO_init@DIO_info
  1411  0060                     l2275:
  1412                           
  1413                           ;DIO.c: 11: ERROR_STATUS DIO_init (DIO_Cfg_s *DIO_info);DIO.c: 12: {;DIO.c: 13: uint8_t 
      +                          ret_error=0;
  1414  0060  01A2               	clrf	DIO_init@ret_error
  1415  0061                     l2277:
  1416                           
  1417                           ;DIO.c: 14: static uint8_t first_powerup_init = 0;;DIO.c: 15: is_init=1;
  1418  0061  01ED               	clrf	_is_init
  1419  0062  0AED               	incf	_is_init,f
  1420  0063                     l2279:
  1421                           
  1422                           ;DIO.c: 16:  if (first_powerup_init == 0) {
  1423  0063  0853               	movf	DIO_init@first_powerup_init,w
  1424  0064  1D03               	btfss	3,2
  1425  0065  2867               	goto	u721
  1426  0066  2868               	goto	u720
  1427  0067                     u721:
  1428  0067  289E               	goto	l2299
  1429  0068                     u720:
  1430  0068  287D               	goto	l2295
  1431  0069                     l2283:
  1432                           
  1433                           ;DIO.c: 20:   *((reg_type8_t)(0x0085))=0x00;
  1434  0069  1683               	bsf	3,5	;RP0=1, select bank1
  1435  006A  1303               	bcf	3,6	;RP1=0, select bank1
  1436  006B  0185               	clrf	5	;volatile
  1437                           
  1438                           ;DIO.c: 21:       break;
  1439  006C  2899               	goto	l2297
  1440  006D                     l2285:
  1441                           
  1442                           ;DIO.c: 23:   *((reg_type8_t)(0x0086))=0x00;
  1443  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1444  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1445  006F  0186               	clrf	6	;volatile
  1446                           
  1447                           ;DIO.c: 24:       break;
  1448  0070  2899               	goto	l2297
  1449  0071                     l2287:
  1450                           
  1451                           ;DIO.c: 26:   *((reg_type8_t)(0x0087))=0x00;
  1452  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1453  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1454  0073  0187               	clrf	7	;volatile
  1455                           
  1456                           ;DIO.c: 27:       break;
  1457  0074  2899               	goto	l2297
  1458  0075                     l2289:
  1459                           
  1460                           ;DIO.c: 29:   *((reg_type8_t)(0x0088))=0x00;
  1461  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1462  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1463  0077  0188               	clrf	8	;volatile
  1464                           
  1465                           ;DIO.c: 30:       break;
  1466  0078  2899               	goto	l2297
  1467  0079                     l2291:
  1468                           
  1469                           ;DIO.c: 32:   *((reg_type8_t)(0x0089))=0x00;
  1470  0079  1683               	bsf	3,5	;RP0=1, select bank1
  1471  007A  1303               	bcf	3,6	;RP1=0, select bank1
  1472  007B  0189               	clrf	9	;volatile
  1473                           
  1474                           ;DIO.c: 33:       break;
  1475  007C  2899               	goto	l2297
  1476  007D                     l2295:
  1477  007D  0823               	movf	DIO_init@DIO_info,w
  1478  007E  0084               	movwf	4
  1479  007F  1383               	bcf	3,7	;select IRP bank0
  1480  0080  0800               	movf	0,w
  1481  0081  00A0               	movwf	??_DIO_init
  1482  0082  01A1               	clrf	??_DIO_init+1
  1483                           
  1484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1485                           ; Switch size 1, requested type "simple"
  1486                           ; Number of cases is 1, Range of values is 0 to 0
  1487                           ; switch strategies available:
  1488                           ; Name         Instructions Cycles
  1489                           ; simple_byte            4     3 (average)
  1490                           ; direct_byte           11     8 (fixed)
  1491                           ; jumptable            260     6 (fixed)
  1492                           ;	Chosen strategy is simple_byte
  1493  0083  0821               	movf	??_DIO_init+1,w
  1494  0084  3A00               	xorlw	0	; case 0
  1495  0085  1903               	skipnz
  1496  0086  2888               	goto	l3449
  1497  0087  2899               	goto	l2297
  1498  0088                     l3449:
  1499                           
  1500                           ; Switch size 1, requested type "simple"
  1501                           ; Number of cases is 5, Range of values is 0 to 4
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte           16     9 (average)
  1505                           ; direct_byte           23     8 (fixed)
  1506                           ; jumptable            260     6 (fixed)
  1507                           ;	Chosen strategy is simple_byte
  1508  0088  0820               	movf	??_DIO_init,w
  1509  0089  3A00               	xorlw	0	; case 0
  1510  008A  1903               	skipnz
  1511  008B  2869               	goto	l2283
  1512  008C  3A01               	xorlw	1	; case 1
  1513  008D  1903               	skipnz
  1514  008E  286D               	goto	l2285
  1515  008F  3A03               	xorlw	3	; case 2
  1516  0090  1903               	skipnz
  1517  0091  2871               	goto	l2287
  1518  0092  3A01               	xorlw	1	; case 3
  1519  0093  1903               	skipnz
  1520  0094  2875               	goto	l2289
  1521  0095  3A07               	xorlw	7	; case 4
  1522  0096  1903               	skipnz
  1523  0097  2879               	goto	l2291
  1524  0098  2899               	goto	l2297
  1525  0099                     l2297:
  1526                           
  1527                           ;DIO.c: 35:   first_powerup_init++;
  1528  0099  3001               	movlw	1
  1529  009A  00FF               	movwf	btemp+1
  1530  009B  087F               	movf	btemp+1,w
  1531  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1532  009D  07D3               	addwf	DIO_init@first_powerup_init,f
  1533  009E                     l2299:
  1534                           
  1535                           ;DIO.c: 37: if((DIO_info -> port)== 0)
  1536  009E  0823               	movf	DIO_init@DIO_info,w
  1537  009F  0084               	movwf	4
  1538  00A0  1383               	bcf	3,7	;select IRP bank0
  1539  00A1  0800               	movf	0,w
  1540  00A2  1D03               	btfss	3,2
  1541  00A3  28A5               	goto	u731
  1542  00A4  28A6               	goto	u730
  1543  00A5                     u731:
  1544  00A5  28AF               	goto	l2303
  1545  00A6                     u730:
  1546  00A6                     l2301:
  1547                           
  1548                           ;DIO.c: 38:  *((reg_type8_t)(0x009F)) |=( DIO_info -> operation_mode) ;
  1549  00A6  0823               	movf	DIO_init@DIO_info,w
  1550  00A7  3E03               	addlw	3
  1551  00A8  0084               	movwf	4
  1552  00A9  0800               	movf	0,w
  1553  00AA  00FF               	movwf	btemp+1
  1554  00AB  087F               	movf	btemp+1,w
  1555  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1556  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  1557  00AE  049F               	iorwf	31,f	;volatile
  1558  00AF                     l2303:
  1559                           
  1560                           ;DIO.c: 39: if(DIO_info != ((void *)0)){
  1561  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1562  00B0  0823               	movf	DIO_init@DIO_info,w
  1563  00B1  1903               	btfsc	3,2
  1564  00B2  28B4               	goto	u741
  1565  00B3  28B5               	goto	u740
  1566  00B4                     u741:
  1567  00B4  296C               	goto	l2345
  1568  00B5                     u740:
  1569  00B5  295A               	goto	l2343
  1570  00B6                     l2307:
  1571                           
  1572                           ;DIO.c: 48:            *((reg_type8_t)(0x0085)) |=(DIO_info-> pin) ;
  1573  00B6  0823               	movf	DIO_init@DIO_info,w
  1574  00B7  3E02               	addlw	2
  1575  00B8  0084               	movwf	4
  1576  00B9  0800               	movf	0,w
  1577  00BA  00FF               	movwf	btemp+1
  1578  00BB  087F               	movf	btemp+1,w
  1579  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1580  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1581  00BE  0485               	iorwf	5,f	;volatile
  1582                           
  1583                           ;DIO.c: 49:             break;
  1584  00BF  2970               	goto	l155
  1585  00C0                     l2309:
  1586                           
  1587                           ;DIO.c: 52:                 *((reg_type8_t)(0x0086)) |=(DIO_info->pin) ;
  1588  00C0  0823               	movf	DIO_init@DIO_info,w
  1589  00C1  3E02               	addlw	2
  1590  00C2  0084               	movwf	4
  1591  00C3  0800               	movf	0,w
  1592  00C4  00FF               	movwf	btemp+1
  1593  00C5  087F               	movf	btemp+1,w
  1594  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1595  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1596  00C8  0486               	iorwf	6,f	;volatile
  1597                           
  1598                           ;DIO.c: 53:             break;
  1599  00C9  2970               	goto	l155
  1600  00CA                     l2311:
  1601                           
  1602                           ;DIO.c: 56:                 *((reg_type8_t)(0x0087)) |=(DIO_info->pin) ;
  1603  00CA  0823               	movf	DIO_init@DIO_info,w
  1604  00CB  3E02               	addlw	2
  1605  00CC  0084               	movwf	4
  1606  00CD  0800               	movf	0,w
  1607  00CE  00FF               	movwf	btemp+1
  1608  00CF  087F               	movf	btemp+1,w
  1609  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1610  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1611  00D2  0487               	iorwf	7,f	;volatile
  1612                           
  1613                           ;DIO.c: 57:             break;
  1614  00D3  2970               	goto	l155
  1615  00D4                     l2313:
  1616                           
  1617                           ;DIO.c: 60:                 *((reg_type8_t)(0x0088)) |=(DIO_info->pin) ;
  1618  00D4  0823               	movf	DIO_init@DIO_info,w
  1619  00D5  3E02               	addlw	2
  1620  00D6  0084               	movwf	4
  1621  00D7  0800               	movf	0,w
  1622  00D8  00FF               	movwf	btemp+1
  1623  00D9  087F               	movf	btemp+1,w
  1624  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1625  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1626  00DC  0488               	iorwf	8,f	;volatile
  1627                           
  1628                           ;DIO.c: 61:             break;
  1629  00DD  2970               	goto	l155
  1630  00DE                     l2315:
  1631                           
  1632                           ;DIO.c: 64:             *((reg_type8_t)(0x0089)) |=(DIO_info->pin) ;
  1633  00DE  0823               	movf	DIO_init@DIO_info,w
  1634  00DF  3E02               	addlw	2
  1635  00E0  0084               	movwf	4
  1636  00E1  0800               	movf	0,w
  1637  00E2  00FF               	movwf	btemp+1
  1638  00E3  087F               	movf	btemp+1,w
  1639  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1640  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1641  00E6  0489               	iorwf	9,f	;volatile
  1642                           
  1643                           ;DIO.c: 65:             break;
  1644  00E7  2970               	goto	l155
  1645  00E8                     l2317:
  1646                           
  1647                           ;DIO.c: 67:             ret_error += 1 +14;
  1648  00E8  300F               	movlw	15
  1649  00E9  00FF               	movwf	btemp+1
  1650  00EA  087F               	movf	btemp+1,w
  1651  00EB  07A2               	addwf	DIO_init@ret_error,f
  1652                           
  1653                           ;DIO.c: 68:             break;
  1654  00EC  2970               	goto	l155
  1655  00ED                     l2321:
  1656  00ED  0823               	movf	DIO_init@DIO_info,w
  1657  00EE  0084               	movwf	4
  1658  00EF  0800               	movf	0,w
  1659  00F0  00A0               	movwf	??_DIO_init
  1660  00F1  01A1               	clrf	??_DIO_init+1
  1661                           
  1662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 1, Range of values is 0 to 0
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte            4     3 (average)
  1668                           ; direct_byte           11     8 (fixed)
  1669                           ; jumptable            260     6 (fixed)
  1670                           ;	Chosen strategy is simple_byte
  1671  00F2  0821               	movf	??_DIO_init+1,w
  1672  00F3  3A00               	xorlw	0	; case 0
  1673  00F4  1903               	skipnz
  1674  00F5  28F7               	goto	l3451
  1675  00F6  28E8               	goto	l2317
  1676  00F7                     l3451:
  1677                           
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 5, Range of values is 0 to 4
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte           16     9 (average)
  1683                           ; direct_byte           23     8 (fixed)
  1684                           ; jumptable            260     6 (fixed)
  1685                           ;	Chosen strategy is simple_byte
  1686  00F7  0820               	movf	??_DIO_init,w
  1687  00F8  3A00               	xorlw	0	; case 0
  1688  00F9  1903               	skipnz
  1689  00FA  28B6               	goto	l2307
  1690  00FB  3A01               	xorlw	1	; case 1
  1691  00FC  1903               	skipnz
  1692  00FD  28C0               	goto	l2309
  1693  00FE  3A03               	xorlw	3	; case 2
  1694  00FF  1903               	skipnz
  1695  0100  28CA               	goto	l2311
  1696  0101  3A01               	xorlw	1	; case 3
  1697  0102  1903               	skipnz
  1698  0103  28D4               	goto	l2313
  1699  0104  3A07               	xorlw	7	; case 4
  1700  0105  1903               	skipnz
  1701  0106  28DE               	goto	l2315
  1702  0107  28E8               	goto	l2317
  1703  0108                     l2323:
  1704                           
  1705                           ;DIO.c: 75:         *((reg_type8_t)(0x0085)) &=(~(DIO_info->pin)) ;
  1706  0108  0823               	movf	DIO_init@DIO_info,w
  1707  0109  3E02               	addlw	2
  1708  010A  0084               	movwf	4
  1709  010B  0900               	comf	0,w
  1710  010C  00FF               	movwf	btemp+1
  1711  010D  087F               	movf	btemp+1,w
  1712  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1713  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1714  0110  0585               	andwf	5,f	;volatile
  1715                           
  1716                           ;DIO.c: 76:       break;
  1717  0111  2970               	goto	l155
  1718  0112                     l2325:
  1719                           
  1720                           ;DIO.c: 78:         *((reg_type8_t)(0x0086)) &=(~(DIO_info->pin)) ;
  1721  0112  0823               	movf	DIO_init@DIO_info,w
  1722  0113  3E02               	addlw	2
  1723  0114  0084               	movwf	4
  1724  0115  0900               	comf	0,w
  1725  0116  00FF               	movwf	btemp+1
  1726  0117  087F               	movf	btemp+1,w
  1727  0118  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0119  1303               	bcf	3,6	;RP1=0, select bank1
  1729  011A  0586               	andwf	6,f	;volatile
  1730                           
  1731                           ;DIO.c: 79:       break;
  1732  011B  2970               	goto	l155
  1733  011C                     l2327:
  1734                           
  1735                           ;DIO.c: 81:         *((reg_type8_t)(0x0087)) &=(~(DIO_info->pin)) ;
  1736  011C  0823               	movf	DIO_init@DIO_info,w
  1737  011D  3E02               	addlw	2
  1738  011E  0084               	movwf	4
  1739  011F  0900               	comf	0,w
  1740  0120  00FF               	movwf	btemp+1
  1741  0121  087F               	movf	btemp+1,w
  1742  0122  1683               	bsf	3,5	;RP0=1, select bank1
  1743  0123  1303               	bcf	3,6	;RP1=0, select bank1
  1744  0124  0587               	andwf	7,f	;volatile
  1745                           
  1746                           ;DIO.c: 82:       break;
  1747  0125  2970               	goto	l155
  1748  0126                     l2329:
  1749                           
  1750                           ;DIO.c: 84:         *((reg_type8_t)(0x0088)) &=(~(DIO_info->pin)) ;
  1751  0126  0823               	movf	DIO_init@DIO_info,w
  1752  0127  3E02               	addlw	2
  1753  0128  0084               	movwf	4
  1754  0129  0900               	comf	0,w
  1755  012A  00FF               	movwf	btemp+1
  1756  012B  087F               	movf	btemp+1,w
  1757  012C  1683               	bsf	3,5	;RP0=1, select bank1
  1758  012D  1303               	bcf	3,6	;RP1=0, select bank1
  1759  012E  0588               	andwf	8,f	;volatile
  1760                           
  1761                           ;DIO.c: 85:       break;
  1762  012F  2970               	goto	l155
  1763  0130                     l2331:
  1764                           
  1765                           ;DIO.c: 87:         *((reg_type8_t)(0x0089)) &=(~(DIO_info->pin)) ;
  1766  0130  0823               	movf	DIO_init@DIO_info,w
  1767  0131  3E02               	addlw	2
  1768  0132  0084               	movwf	4
  1769  0133  0900               	comf	0,w
  1770  0134  00FF               	movwf	btemp+1
  1771  0135  087F               	movf	btemp+1,w
  1772  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1773  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1774  0138  0589               	andwf	9,f	;volatile
  1775                           
  1776                           ;DIO.c: 88:       break;
  1777  0139  2970               	goto	l155
  1778  013A                     l2337:
  1779  013A  0823               	movf	DIO_init@DIO_info,w
  1780  013B  0084               	movwf	4
  1781  013C  0800               	movf	0,w
  1782  013D  00A0               	movwf	??_DIO_init
  1783  013E  01A1               	clrf	??_DIO_init+1
  1784                           
  1785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1786                           ; Switch size 1, requested type "simple"
  1787                           ; Number of cases is 1, Range of values is 0 to 0
  1788                           ; switch strategies available:
  1789                           ; Name         Instructions Cycles
  1790                           ; simple_byte            4     3 (average)
  1791                           ; direct_byte           11     8 (fixed)
  1792                           ; jumptable            260     6 (fixed)
  1793                           ;	Chosen strategy is simple_byte
  1794  013F  0821               	movf	??_DIO_init+1,w
  1795  0140  3A00               	xorlw	0	; case 0
  1796  0141  1903               	skipnz
  1797  0142  2944               	goto	l3453
  1798  0143  28E8               	goto	l2317
  1799  0144                     l3453:
  1800                           
  1801                           ; Switch size 1, requested type "simple"
  1802                           ; Number of cases is 5, Range of values is 0 to 4
  1803                           ; switch strategies available:
  1804                           ; Name         Instructions Cycles
  1805                           ; simple_byte           16     9 (average)
  1806                           ; direct_byte           23     8 (fixed)
  1807                           ; jumptable            260     6 (fixed)
  1808                           ;	Chosen strategy is simple_byte
  1809  0144  0820               	movf	??_DIO_init,w
  1810  0145  3A00               	xorlw	0	; case 0
  1811  0146  1903               	skipnz
  1812  0147  2908               	goto	l2323
  1813  0148  3A01               	xorlw	1	; case 1
  1814  0149  1903               	skipnz
  1815  014A  2912               	goto	l2325
  1816  014B  3A03               	xorlw	3	; case 2
  1817  014C  1903               	skipnz
  1818  014D  291C               	goto	l2327
  1819  014E  3A01               	xorlw	1	; case 3
  1820  014F  1903               	skipnz
  1821  0150  2926               	goto	l2329
  1822  0151  3A07               	xorlw	7	; case 4
  1823  0152  1903               	skipnz
  1824  0153  2930               	goto	l2331
  1825  0154  28E8               	goto	l2317
  1826  0155                     l2339:
  1827                           
  1828                           ;DIO.c: 95: ret_error +=1 + 18;
  1829  0155  3013               	movlw	19
  1830  0156  00FF               	movwf	btemp+1
  1831  0157  087F               	movf	btemp+1,w
  1832  0158  07A2               	addwf	DIO_init@ret_error,f
  1833                           
  1834                           ;DIO.c: 96: break;
  1835  0159  2970               	goto	l155
  1836  015A                     l2343:
  1837  015A  0A23               	incf	DIO_init@DIO_info,w
  1838  015B  0084               	movwf	4
  1839  015C  0800               	movf	0,w
  1840  015D  00A0               	movwf	??_DIO_init
  1841  015E  01A1               	clrf	??_DIO_init+1
  1842                           
  1843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1844                           ; Switch size 1, requested type "simple"
  1845                           ; Number of cases is 1, Range of values is 0 to 0
  1846                           ; switch strategies available:
  1847                           ; Name         Instructions Cycles
  1848                           ; simple_byte            4     3 (average)
  1849                           ; direct_byte           11     8 (fixed)
  1850                           ; jumptable            260     6 (fixed)
  1851                           ;	Chosen strategy is simple_byte
  1852  015F  0821               	movf	??_DIO_init+1,w
  1853  0160  3A00               	xorlw	0	; case 0
  1854  0161  1903               	skipnz
  1855  0162  2964               	goto	l3455
  1856  0163  2955               	goto	l2339
  1857  0164                     l3455:
  1858                           
  1859                           ; Switch size 1, requested type "simple"
  1860                           ; Number of cases is 2, Range of values is 0 to 255
  1861                           ; switch strategies available:
  1862                           ; Name         Instructions Cycles
  1863                           ; simple_byte            7     4 (average)
  1864                           ; jumptable            260     6 (fixed)
  1865                           ;	Chosen strategy is simple_byte
  1866  0164  0820               	movf	??_DIO_init,w
  1867  0165  3A00               	xorlw	0	; case 0
  1868  0166  1903               	skipnz
  1869  0167  28ED               	goto	l2321
  1870  0168  3AFF               	xorlw	255	; case 255
  1871  0169  1903               	skipnz
  1872  016A  293A               	goto	l2337
  1873  016B  2955               	goto	l2339
  1874  016C                     l2345:
  1875                           
  1876                           ;DIO.c: 99: {;DIO.c: 100: ret_error +=1 +16;
  1877  016C  3011               	movlw	17
  1878  016D  00FF               	movwf	btemp+1
  1879  016E  087F               	movf	btemp+1,w
  1880  016F  07A2               	addwf	DIO_init@ret_error,f
  1881  0170                     l155:
  1882  0170  0008               	return
  1883  0171                     __end_of_DIO_init:
  1884                           
  1885                           	psect	text5
  1886  04B3                     __ptext5:	
  1887 ;; *************** function _EEPROM_Write *****************
  1888 ;; Defined at:
  1889 ;;		line 79 in file "I2C.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  add             2    1[BANK0 ] unsigned int 
  1892 ;;  data            1    3[BANK0 ] unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       3       0       0       0
  1905 ;;      Locals:         0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0
  1907 ;;      Totals:         0       3       0       0       0
  1908 ;;Total ram usage:        3 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    5
  1911 ;; This function calls:
  1912 ;;		_I2C_Begin
  1913 ;;		_I2C_End
  1914 ;;		_I2C_Master_RepeatedStart
  1915 ;;		_I2C_Master_Write
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function _EEPROM_Write
  1923  04B3                     _EEPROM_Write:
  1924  04B3                     l2685:	
  1925                           ;incstack = 0
  1926                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1927                           
  1928                           
  1929                           ;I2C.c: 79: void EEPROM_Write(unsigned int add, unsigned char data);I2C.c: 80: {;I2C.c: 
      +                          81:   I2C_Begin();
  1930  04B3  120A  118A  25DE  120A  118A  	fcall	_I2C_Begin
  1931                           
  1932                           ;I2C.c: 83:   while(I2C_Master_Write(0xA0))
  1933  04B8  2CBE               	goto	l2689
  1934  04B9                     l2687:
  1935                           
  1936                           ;I2C.c: 84:     I2C_Master_RepeatedStart();
  1937  04B9  120A  118A  25CC  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1938  04BE                     l2689:
  1939                           
  1940                           ;I2C.c: 83:   while(I2C_Master_Write(0xA0))
  1941  04BE  30A0               	movlw	160
  1942  04BF  120A  118A  2551  120A  118A  	fcall	_I2C_Master_Write
  1943  04C4  3A00               	xorlw	0
  1944  04C5  1D03               	skipz
  1945  04C6  2CC8               	goto	u961
  1946  04C7  2CC9               	goto	u960
  1947  04C8                     u961:
  1948  04C8  2CB9               	goto	l2687
  1949  04C9                     u960:
  1950  04C9                     l2691:
  1951                           
  1952                           ;I2C.c: 85:   I2C_Master_Write(add>>8);
  1953  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1954  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1955  04CB  0822               	movf	EEPROM_Write@add+1,w
  1956  04CC  120A  118A  2551  120A  118A  	fcall	_I2C_Master_Write
  1957                           
  1958                           ;I2C.c: 86:   I2C_Master_Write((unsigned char)add);
  1959  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1960  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1961  04D3  0821               	movf	EEPROM_Write@add,w
  1962  04D4  120A  118A  2551  120A  118A  	fcall	_I2C_Master_Write
  1963                           
  1964                           ;I2C.c: 87:   I2C_Master_Write(data);
  1965  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1966  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1967  04DB  0823               	movf	EEPROM_Write@data,w
  1968  04DC  120A  118A  2551  120A  118A  	fcall	_I2C_Master_Write
  1969  04E1                     l2693:
  1970                           
  1971                           ;I2C.c: 88:   I2C_End();
  1972  04E1  120A  118A  25D5  120A  118A  	fcall	_I2C_End
  1973  04E6                     l375:
  1974  04E6  0008               	return
  1975  04E7                     __end_of_EEPROM_Write:
  1976                           
  1977                           	psect	text6
  1978  036B                     __ptext6:	
  1979 ;; *************** function _EEPROM_Read *****************
  1980 ;; Defined at:
  1981 ;;		line 91 in file "I2C.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  add             2    1[BANK0 ] unsigned int 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  Data            1    3[BANK0 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      unsigned char 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1995 ;;      Params:         0       2       0       0       0
  1996 ;;      Locals:         0       1       0       0       0
  1997 ;;      Temps:          0       0       0       0       0
  1998 ;;      Totals:         0       3       0       0       0
  1999 ;;Total ram usage:        3 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    5
  2002 ;; This function calls:
  2003 ;;		_I2C_Begin
  2004 ;;		_I2C_End
  2005 ;;		_I2C_Master_RepeatedStart
  2006 ;;		_I2C_Master_Write
  2007 ;;		_I2C_NACK
  2008 ;;		_I2C_Read_Byte
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _EEPROM_Read
  2016  036B                     _EEPROM_Read:
  2017  036B                     l2695:	
  2018                           ;incstack = 0
  2019                           ; Regs used in _EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2020                           
  2021                           
  2022                           ;I2C.c: 91: uint8_t EEPROM_Read(unsigned int add);I2C.c: 92: {;I2C.c: 93:   uint8_t Data
      +                          ;;I2C.c: 94: I2C_Begin();
  2023  036B  120A  118A  25DE  120A  118A  	fcall	_I2C_Begin
  2024                           
  2025                           ;I2C.c: 95:   while(I2C_Master_Write(0xA0))
  2026  0370  2B76               	goto	l2699
  2027  0371                     l2697:
  2028                           
  2029                           ;I2C.c: 96:     I2C_Master_RepeatedStart();
  2030  0371  120A  118A  25CC  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2031  0376                     l2699:
  2032                           
  2033                           ;I2C.c: 95:   while(I2C_Master_Write(0xA0))
  2034  0376  30A0               	movlw	160
  2035  0377  120A  118A  2551  120A  118A  	fcall	_I2C_Master_Write
  2036  037C  3A00               	xorlw	0
  2037  037D  1D03               	skipz
  2038  037E  2B80               	goto	u971
  2039  037F  2B81               	goto	u970
  2040  0380                     u971:
  2041  0380  2B71               	goto	l2697
  2042  0381                     u970:
  2043  0381                     l2701:
  2044                           
  2045                           ;I2C.c: 97:   I2C_Master_Write(add>>8);
  2046  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0383  0822               	movf	EEPROM_Read@add+1,w
  2049  0384  120A  118A  2551  120A  118A  	fcall	_I2C_Master_Write
  2050                           
  2051                           ;I2C.c: 98:   I2C_Master_Write((unsigned char)add);
  2052  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2053  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2054  038B  0821               	movf	EEPROM_Read@add,w
  2055  038C  120A  118A  2551  120A  118A  	fcall	_I2C_Master_Write
  2056  0391                     l2703:
  2057                           
  2058                           ;I2C.c: 99:   I2C_Master_RepeatedStart();
  2059  0391  120A  118A  25CC  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2060  0396                     l2705:
  2061                           
  2062                           ;I2C.c: 100:   I2C_Master_Write(0xA1);
  2063  0396  30A1               	movlw	161
  2064  0397  120A  118A  2551  120A  118A  	fcall	_I2C_Master_Write
  2065  039C                     l2707:
  2066                           
  2067                           ;I2C.c: 101:   Data = I2C_Read_Byte();
  2068  039C  120A  118A  25C1  120A  118A  	fcall	_I2C_Read_Byte
  2069  03A1  00FF               	movwf	btemp+1
  2070  03A2  087F               	movf	btemp+1,w
  2071  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2072  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2073  03A5  00A3               	movwf	EEPROM_Read@Data
  2074  03A6                     l2709:
  2075                           
  2076                           ;I2C.c: 102:   I2C_NACK();
  2077  03A6  120A  118A  25B5  120A  118A  	fcall	_I2C_NACK
  2078  03AB                     l2711:
  2079                           
  2080                           ;I2C.c: 103:   I2C_End();
  2081  03AB  120A  118A  25D5  120A  118A  	fcall	_I2C_End
  2082  03B0                     l2713:
  2083                           
  2084                           ;I2C.c: 104:   return Data;
  2085  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2086  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2087  03B2  0823               	movf	EEPROM_Read@Data,w
  2088  03B3                     l381:
  2089  03B3  0008               	return
  2090  03B4                     __end_of_EEPROM_Read:
  2091                           
  2092                           	psect	text7
  2093  05C1                     __ptext7:	
  2094 ;; *************** function _I2C_Read_Byte *****************
  2095 ;; Defined at:
  2096 ;;		line 57 in file "I2C.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    4
  2117 ;; This function calls:
  2118 ;;		_I2C_Hold
  2119 ;; This function is called by:
  2120 ;;		_EEPROM_Read
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _I2C_Read_Byte
  2126  05C1                     _I2C_Read_Byte:
  2127  05C1                     l2429:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  2130                           
  2131                           
  2132                           ;I2C.c: 60:   I2C_Hold();
  2133  05C1  120A  118A  25A8  120A  118A  	fcall	_I2C_Hold
  2134  05C6                     l2431:
  2135                           
  2136                           ;I2C.c: 61:   *((reg_type8_t)(0x0091)) |= 0x08 ;
  2137  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2138  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2139  05C8  1591               	bsf	17,3	;volatile
  2140  05C9                     l2433:	
  2141                           ;I2C.c: 62:   while(!( (*((reg_type8_t)(0x008C)) >> 0x08) & 1 ));
  2142                           
  2143  05C9  080C               	movf	12,w	;volatile
  2144  05CA  2DC9               	goto	l2433
  2145  05CB  0008               	return
  2146  05CC                     __end_of_I2C_Read_Byte:
  2147                           
  2148                           	psect	text8
  2149  05B5                     __ptext8:	
  2150 ;; *************** function _I2C_NACK *****************
  2151 ;; Defined at:
  2152 ;;		line 73 in file "I2C.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0
  2169 ;;      Totals:         0       0       0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    4
  2173 ;; This function calls:
  2174 ;;		_I2C_Hold
  2175 ;; This function is called by:
  2176 ;;		_EEPROM_Read
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _I2C_NACK
  2182  05B5                     _I2C_NACK:
  2183  05B5                     l2443:	
  2184                           ;incstack = 0
  2185                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  2186                           
  2187                           
  2188                           ;I2C.c: 75:    *((reg_type8_t)(0x0091)) |= 0x20;
  2189  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  2190  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  2191  05B7  1691               	bsf	17,5	;volatile
  2192  05B8                     l2445:
  2193                           
  2194                           ;I2C.c: 76:   I2C_Hold();
  2195  05B8  120A  118A  25A8  120A  118A  	fcall	_I2C_Hold
  2196  05BD                     l2447:
  2197                           
  2198                           ;I2C.c: 77:   *((reg_type8_t)(0x0091)) |= 0x10;
  2199  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  2200  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  2201  05BF  1611               	bsf	17,4	;volatile
  2202  05C0                     l369:
  2203  05C0  0008               	return
  2204  05C1                     __end_of_I2C_NACK:
  2205                           
  2206                           	psect	text9
  2207  0551                     __ptext9:	
  2208 ;; *************** function _I2C_Master_Write *****************
  2209 ;; Defined at:
  2210 ;;		line 16 in file "I2C.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  data            1    wreg     unsigned char 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  data            1    0[BANK0 ] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      unsigned char 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         0       1       0       0       0
  2226 ;;      Temps:          0       0       0       0       0
  2227 ;;      Totals:         0       1       0       0       0
  2228 ;;Total ram usage:        1 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    4
  2231 ;; This function calls:
  2232 ;;		_I2C_Hold
  2233 ;; This function is called by:
  2234 ;;		_EEPROM_Write
  2235 ;;		_EEPROM_Read
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _I2C_Master_Write
  2241  0551                     _I2C_Master_Write:
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2245                           ;I2C_Master_Write@data stored from wreg
  2246  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0553  00A0               	movwf	I2C_Master_Write@data
  2249  0554                     l2405:
  2250                           
  2251                           ;I2C.c: 16: unsigned char I2C_Master_Write(unsigned char data);I2C.c: 17: {;I2C.c: 18:  
      +                           I2C_Hold();
  2252  0554  120A  118A  25A8  120A  118A  	fcall	_I2C_Hold
  2253  0559                     l2407:
  2254                           
  2255                           ;I2C.c: 19:   *((reg_type8_t)(0x0013)) = data;
  2256  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2257  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2258  055B  0820               	movf	I2C_Master_Write@data,w
  2259  055C  00FF               	movwf	btemp+1
  2260  055D  087F               	movf	btemp+1,w
  2261  055E  0093               	movwf	19	;volatile
  2262  055F                     l2409:	
  2263                           ;I2C.c: 20:   while(!( (*((reg_type8_t)(0x008C)) >> 0x08) & 1 ))
  2264                           
  2265                           
  2266                           ;I2C.c: 20:   while(!( (*((reg_type8_t)(0x008C)) >> 0x08) & 1 ))
  2267  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2268  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2269  0561  080C               	movf	12,w	;volatile
  2270  0562  2D5F               	goto	l2409
  2271  0563  0008               	return
  2272  0564                     __end_of_I2C_Master_Write:
  2273                           
  2274                           	psect	text10
  2275  05CC                     __ptext10:	
  2276 ;; *************** function _I2C_Master_RepeatedStart *****************
  2277 ;; Defined at:
  2278 ;;		line 25 in file "I2C.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0
  2295 ;;      Totals:         0       0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    4
  2299 ;; This function calls:
  2300 ;;		_I2C_Hold
  2301 ;; This function is called by:
  2302 ;;		_EEPROM_Write
  2303 ;;		_EEPROM_Read
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _I2C_Master_RepeatedStart
  2309  05CC                     _I2C_Master_RepeatedStart:
  2310  05CC                     l2417:	
  2311                           ;incstack = 0
  2312                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2313                           
  2314                           
  2315                           ;I2C.c: 27:   I2C_Hold();
  2316  05CC  120A  118A  25A8  120A  118A  	fcall	_I2C_Hold
  2317  05D1                     l2419:
  2318                           
  2319                           ;I2C.c: 28:   *((reg_type8_t)(0x0091)) |= 0x02 ;
  2320  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  2321  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  2322  05D3  1491               	bsf	17,1	;volatile
  2323  05D4                     l342:
  2324  05D4  0008               	return
  2325  05D5                     __end_of_I2C_Master_RepeatedStart:
  2326                           
  2327                           	psect	text11
  2328  05D5                     __ptext11:	
  2329 ;; *************** function _I2C_End *****************
  2330 ;; Defined at:
  2331 ;;		line 45 in file "I2C.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0
  2348 ;;      Totals:         0       0       0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    4
  2352 ;; This function calls:
  2353 ;;		_I2C_Hold
  2354 ;; This function is called by:
  2355 ;;		_EEPROM_Write
  2356 ;;		_EEPROM_Read
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function _I2C_End
  2362  05D5                     _I2C_End:
  2363  05D5                     l2425:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  2366                           
  2367                           
  2368                           ;I2C.c: 47:   I2C_Hold();
  2369  05D5  120A  118A  25A8  120A  118A  	fcall	_I2C_Hold
  2370  05DA                     l2427:
  2371                           
  2372                           ;I2C.c: 48: *((reg_type8_t)(0x0091)) |=0x04;
  2373  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  2374  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  2375  05DC  1511               	bsf	17,2	;volatile
  2376  05DD                     l354:
  2377  05DD  0008               	return
  2378  05DE                     __end_of_I2C_End:
  2379                           
  2380                           	psect	text12
  2381  05DE                     __ptext12:	
  2382 ;; *************** function _I2C_Begin *****************
  2383 ;; Defined at:
  2384 ;;		line 40 in file "I2C.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, pclath, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0
  2401 ;;      Totals:         0       0       0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    4
  2405 ;; This function calls:
  2406 ;;		_I2C_Hold
  2407 ;; This function is called by:
  2408 ;;		_EEPROM_Write
  2409 ;;		_EEPROM_Read
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function _I2C_Begin
  2415  05DE                     _I2C_Begin:
  2416  05DE                     l2421:	
  2417                           ;incstack = 0
  2418                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
  2419                           
  2420                           
  2421                           ;I2C.c: 42:   I2C_Hold();
  2422  05DE  120A  118A  25A8  120A  118A  	fcall	_I2C_Hold
  2423  05E3                     l2423:
  2424                           
  2425                           ;I2C.c: 43: *((reg_type8_t)(0x0091)) |=0x01;
  2426  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  2427  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  2428  05E5  1411               	bsf	17,0	;volatile
  2429  05E6                     l351:
  2430  05E6  0008               	return
  2431  05E7                     __end_of_I2C_Begin:
  2432                           
  2433                           	psect	text13
  2434  05A8                     __ptext13:	
  2435 ;; *************** function _I2C_Hold *****************
  2436 ;; Defined at:
  2437 ;;		line 31 in file "I2C.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    3
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_I2C_Master_Write
  2462 ;;		_I2C_Master_RepeatedStart
  2463 ;;		_I2C_Begin
  2464 ;;		_I2C_End
  2465 ;;		_I2C_Read_Byte
  2466 ;;		_I2C_NACK
  2467 ;;		_I2C_Write
  2468 ;;		_I2C_ACK
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function _I2C_Hold
  2474  05A8                     _I2C_Hold:
  2475  05A8                     l2201:	
  2476                           ;incstack = 0
  2477                           ; Regs used in _I2C_Hold: [wreg+status,2]
  2478                           
  2479  05A8                     l2203:	
  2480                           ;I2C.c: 33:     while (
  2481                           
  2482                           
  2483                           ;I2C.c: 33:     while (
  2484  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2485  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  2486  05AA  0811               	movf	17,w	;volatile
  2487  05AB  391F               	andlw	31
  2488  05AC  1D03               	btfss	3,2
  2489  05AD  2DAF               	goto	u651
  2490  05AE  2DB0               	goto	u650
  2491  05AF                     u651:
  2492  05AF  2DA8               	goto	l2203
  2493  05B0                     u650:
  2494  05B0                     l2205:
  2495  05B0  1914               	btfsc	20,2	;volatile
  2496  05B1  2DB3               	goto	u661
  2497  05B2  2DB4               	goto	u660
  2498  05B3                     u661:
  2499  05B3  2DA8               	goto	l2203
  2500  05B4                     u660:
  2501  05B4                     l348:
  2502  05B4  0008               	return
  2503  05B5                     __end_of_I2C_Hold:
  2504                           
  2505                           	psect	text14
  2506  0478                     __ptext14:	
  2507 ;; *************** function _ADC_READ *****************
  2508 ;; Defined at:
  2509 ;;		line 39 in file "ADC.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2   10[BANK0 ] unsigned int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       2       0       0       0
  2524 ;;      Locals:         0       0       0       0       0
  2525 ;;      Temps:          0       1       0       0       0
  2526 ;;      Totals:         0       3       0       0       0
  2527 ;;Total ram usage:        3 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    4
  2530 ;; This function calls:
  2531 ;;		_SwDelay_ms
  2532 ;;		_SwDelay_us
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _ADC_READ
  2540  0478                     _ADC_READ:
  2541  0478                     l2717:	
  2542                           ;incstack = 0
  2543                           ; Regs used in _ADC_READ: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2544                           
  2545                           
  2546                           ;ADC.c: 41: SwDelay_ms(2);
  2547  0478  3000               	movlw	0
  2548  0479  1283               	bcf	3,5	;RP0=0, select bank0
  2549  047A  1303               	bcf	3,6	;RP1=0, select bank0
  2550  047B  00A3               	movwf	SwDelay_ms@n+3
  2551  047C  3000               	movlw	0
  2552  047D  00A2               	movwf	SwDelay_ms@n+2
  2553  047E  3000               	movlw	0
  2554  047F  00A1               	movwf	SwDelay_ms@n+1
  2555  0480  3002               	movlw	2
  2556  0481  00A0               	movwf	SwDelay_ms@n
  2557  0482  120A  118A  23FC  120A  118A  	fcall	_SwDelay_ms
  2558  0487                     l2719:
  2559                           
  2560                           ;ADC.c: 43:     *((reg_type8_t)(0x001F)) &= 0b11000101;
  2561  0487  30C5               	movlw	197
  2562  0488  00FF               	movwf	btemp+1
  2563  0489  087F               	movf	btemp+1,w
  2564  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2565  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2566  048C  059F               	andwf	31,f	;volatile
  2567  048D                     l2721:
  2568                           
  2569                           ;ADC.c: 44:     *((reg_type8_t)(0x001F)) |= 0x00;
  2570  048D  081F               	movf	31,w	;volatile
  2571  048E                     l2723:
  2572                           
  2573                           ;ADC.c: 46: SwDelay_us(30);
  2574  048E  3000               	movlw	0
  2575  048F  00A3               	movwf	SwDelay_us@n+3
  2576  0490  3000               	movlw	0
  2577  0491  00A2               	movwf	SwDelay_us@n+2
  2578  0492  3000               	movlw	0
  2579  0493  00A1               	movwf	SwDelay_us@n+1
  2580  0494  301E               	movlw	30
  2581  0495  00A0               	movwf	SwDelay_us@n
  2582  0496  120A  118A  24E7  120A  118A  	fcall	_SwDelay_us
  2583  049B                     l2725:
  2584                           
  2585                           ;ADC.c: 47: *((reg_type8_t)(0x001F)) |=0x04 ;
  2586  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2587  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2588  049D  151F               	bsf	31,2	;volatile
  2589  049E                     l2727:	
  2590                           ;ADC.c: 48:     while(( (*((reg_type8_t)(0x001F)) >> 0x04) & 1 ));
  2591                           
  2592  049E  081F               	movf	31,w	;volatile
  2593  049F  00AC               	movwf	??_ADC_READ
  2594  04A0  3004               	movlw	4
  2595  04A1                     u985:
  2596  04A1  1003               	clrc
  2597  04A2  0CAC               	rrf	??_ADC_READ,f
  2598  04A3  3EFF               	addlw	-1
  2599  04A4  1D03               	skipz
  2600  04A5  2CA1               	goto	u985
  2601  04A6  182C               	btfsc	??_ADC_READ,0
  2602  04A7  2CA9               	goto	u991
  2603  04A8  2CAA               	goto	u990
  2604  04A9                     u991:
  2605  04A9  2C9E               	goto	l2727
  2606  04AA                     u990:
  2607  04AA                     l2729:
  2608                           
  2609                           ;ADC.c: 50: return ((*((reg_type8_t)(0x001E)) << 8) + *((reg_type8_t)(0x009E)));
  2610  04AA  081E               	movf	30,w	;volatile
  2611  04AB  00AB               	movwf	?_ADC_READ+1
  2612  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  2613  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  2614  04AE  081E               	movf	30,w	;volatile
  2615  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2616  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2617  04B1  00AA               	movwf	?_ADC_READ
  2618  04B2                     l416:
  2619  04B2  0008               	return
  2620  04B3                     __end_of_ADC_READ:
  2621                           
  2622                           	psect	text15
  2623  04E7                     __ptext15:	
  2624 ;; *************** function _SwDelay_us *****************
  2625 ;; Defined at:
  2626 ;;		line 37 in file "software_delay.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  n               4    0[BANK0 ] unsigned long 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       4       0       0       0
  2641 ;;      Locals:         0       0       0       0       0
  2642 ;;      Temps:          0       4       0       0       0
  2643 ;;      Totals:         0       8       0       0       0
  2644 ;;Total ram usage:        8 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    3
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_ADC_READ
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _SwDelay_us
  2656  04E7                     _SwDelay_us:
  2657  04E7                     l2449:	
  2658                           ;incstack = 0
  2659                           ; Regs used in _SwDelay_us: [wreg]
  2660                           
  2661                           
  2662                           ;software_delay.c: 37: void SwDelay_us(uint32_t n);software_delay.c: 38: {;software_dela
      +                          y.c: 39:  while (n)
  2663  04E7  2D04               	goto	l538
  2664  04E8                     l2451:
  2665                           
  2666                           ;software_delay.c: 40:  {;software_delay.c: 41:   n--;
  2667  04E8  3001               	movlw	1
  2668  04E9  00A4               	movwf	??_SwDelay_us
  2669  04EA  3000               	movlw	0
  2670  04EB  00A5               	movwf	??_SwDelay_us+1
  2671  04EC  3000               	movlw	0
  2672  04ED  00A6               	movwf	??_SwDelay_us+2
  2673  04EE  3000               	movlw	0
  2674  04EF  00A7               	movwf	??_SwDelay_us+3
  2675  04F0  0824               	movf	??_SwDelay_us,w
  2676  04F1  02A0               	subwf	SwDelay_us@n,f
  2677  04F2  0825               	movf	??_SwDelay_us+1,w
  2678  04F3  1C03               	skipc
  2679  04F4  0F25               	incfsz	??_SwDelay_us+1,w
  2680  04F5  2CF7               	goto	u795
  2681  04F6  2CF8               	goto	u796
  2682  04F7                     u795:
  2683  04F7  02A1               	subwf	SwDelay_us@n+1,f
  2684  04F8                     u796:
  2685  04F8  0826               	movf	??_SwDelay_us+2,w
  2686  04F9  1C03               	skipc
  2687  04FA  0F26               	incfsz	??_SwDelay_us+2,w
  2688  04FB  2CFD               	goto	u797
  2689  04FC  2CFE               	goto	u798
  2690  04FD                     u797:
  2691  04FD  02A2               	subwf	SwDelay_us@n+2,f
  2692  04FE                     u798:
  2693  04FE  0827               	movf	??_SwDelay_us+3,w
  2694  04FF  1C03               	skipc
  2695  0500  0F27               	incfsz	??_SwDelay_us+3,w
  2696  0501  2D03               	goto	u799
  2697  0502  2D04               	goto	u790
  2698  0503                     u799:
  2699  0503  02A3               	subwf	SwDelay_us@n+3,f
  2700  0504                     u790:
  2701  0504                     l538:	
  2702                           ;software_delay.c: 42:  }
  2703                           
  2704                           
  2705                           ;software_delay.c: 39:  while (n)
  2706  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2707  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2708  0506  0823               	movf	SwDelay_us@n+3,w
  2709  0507  0422               	iorwf	SwDelay_us@n+2,w
  2710  0508  0421               	iorwf	SwDelay_us@n+1,w
  2711  0509  0420               	iorwf	SwDelay_us@n,w
  2712  050A  1D03               	skipz
  2713  050B  2D0D               	goto	u801
  2714  050C  2D0E               	goto	u800
  2715  050D                     u801:
  2716  050D  2CE8               	goto	l2451
  2717  050E                     u800:
  2718  050E                     l541:
  2719  050E  0008               	return
  2720  050F                     __end_of_SwDelay_us:
  2721                           
  2722                           	psect	text16
  2723  03FC                     __ptext16:	
  2724 ;; *************** function _SwDelay_ms *****************
  2725 ;; Defined at:
  2726 ;;		line 10 in file "software_delay.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  n               4    0[BANK0 ] unsigned long 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  counter_21      1    9[BANK0 ] unsigned char 
  2731 ;;  counter_256     1    8[BANK0 ] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, btemp+1
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       4       0       0       0
  2742 ;;      Locals:         0       2       0       0       0
  2743 ;;      Temps:          0       4       0       0       0
  2744 ;;      Totals:         0      10       0       0       0
  2745 ;;Total ram usage:       10 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    3
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;;		_ADC_READ
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _SwDelay_ms
  2758  03FC                     _SwDelay_ms:
  2759  03FC                     l2373:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _SwDelay_ms: [wreg+status,2+status,0+btemp+1]
  2762                           
  2763                           
  2764                           ;software_delay.c: 10: void SwDelay_ms(uint32_t n);software_delay.c: 11: {;software_dela
      +                          y.c: 12:  uint8_t counter_256;;software_delay.c: 13:  uint8_t counter_21;;software_delay
      +                          .c: 14:  while (n)
  2765  03FC  2C31               	goto	l526
  2766  03FD                     l2375:
  2767                           
  2768                           ;software_delay.c: 15:  {;software_delay.c: 17:   counter_21 = 21;
  2769  03FD  3015               	movlw	21
  2770  03FE  00FF               	movwf	btemp+1
  2771  03FF  087F               	movf	btemp+1,w
  2772  0400  00A9               	movwf	SwDelay_ms@counter_21
  2773                           
  2774                           ;software_delay.c: 18:   while (counter_21)
  2775  0401  2C10               	goto	l528
  2776  0402                     l2377:
  2777                           
  2778                           ;software_delay.c: 19:   {;software_delay.c: 21:    counter_256 = 255;
  2779  0402  30FF               	movlw	255
  2780  0403  00FF               	movwf	btemp+1
  2781  0404  087F               	movf	btemp+1,w
  2782  0405  00A8               	movwf	SwDelay_ms@counter_256
  2783                           
  2784                           ;software_delay.c: 22:    while (counter_256)
  2785  0406  2C09               	goto	l530
  2786  0407                     l2379:
  2787                           
  2788                           ;software_delay.c: 23:    {;software_delay.c: 24:     counter_256--;
  2789  0407  3001               	movlw	1
  2790  0408  02A8               	subwf	SwDelay_ms@counter_256,f
  2791  0409                     l530:	
  2792                           ;software_delay.c: 25:    }
  2793                           
  2794                           
  2795                           ;software_delay.c: 22:    while (counter_256)
  2796  0409  0828               	movf	SwDelay_ms@counter_256,w
  2797  040A  1D03               	btfss	3,2
  2798  040B  2C0D               	goto	u751
  2799  040C  2C0E               	goto	u750
  2800  040D                     u751:
  2801  040D  2C07               	goto	l2379
  2802  040E                     u750:
  2803  040E                     l2381:
  2804                           
  2805                           ;software_delay.c: 26:    counter_21--;
  2806  040E  3001               	movlw	1
  2807  040F  02A9               	subwf	SwDelay_ms@counter_21,f
  2808  0410                     l528:	
  2809                           ;software_delay.c: 27:   }
  2810                           
  2811                           
  2812                           ;software_delay.c: 18:   while (counter_21)
  2813  0410  0829               	movf	SwDelay_ms@counter_21,w
  2814  0411  1D03               	btfss	3,2
  2815  0412  2C14               	goto	u761
  2816  0413  2C15               	goto	u760
  2817  0414                     u761:
  2818  0414  2C02               	goto	l2377
  2819  0415                     u760:
  2820  0415                     l2383:
  2821                           
  2822                           ;software_delay.c: 28:   n--;
  2823  0415  3001               	movlw	1
  2824  0416  00A4               	movwf	??_SwDelay_ms
  2825  0417  3000               	movlw	0
  2826  0418  00A5               	movwf	??_SwDelay_ms+1
  2827  0419  3000               	movlw	0
  2828  041A  00A6               	movwf	??_SwDelay_ms+2
  2829  041B  3000               	movlw	0
  2830  041C  00A7               	movwf	??_SwDelay_ms+3
  2831  041D  0824               	movf	??_SwDelay_ms,w
  2832  041E  02A0               	subwf	SwDelay_ms@n,f
  2833  041F  0825               	movf	??_SwDelay_ms+1,w
  2834  0420  1C03               	skipc
  2835  0421  0F25               	incfsz	??_SwDelay_ms+1,w
  2836  0422  2C24               	goto	u775
  2837  0423  2C25               	goto	u776
  2838  0424                     u775:
  2839  0424  02A1               	subwf	SwDelay_ms@n+1,f
  2840  0425                     u776:
  2841  0425  0826               	movf	??_SwDelay_ms+2,w
  2842  0426  1C03               	skipc
  2843  0427  0F26               	incfsz	??_SwDelay_ms+2,w
  2844  0428  2C2A               	goto	u777
  2845  0429  2C2B               	goto	u778
  2846  042A                     u777:
  2847  042A  02A2               	subwf	SwDelay_ms@n+2,f
  2848  042B                     u778:
  2849  042B  0827               	movf	??_SwDelay_ms+3,w
  2850  042C  1C03               	skipc
  2851  042D  0F27               	incfsz	??_SwDelay_ms+3,w
  2852  042E  2C30               	goto	u779
  2853  042F  2C31               	goto	u770
  2854  0430                     u779:
  2855  0430  02A3               	subwf	SwDelay_ms@n+3,f
  2856  0431                     u770:
  2857  0431                     l526:	
  2858                           ;software_delay.c: 29:  }
  2859                           
  2860                           
  2861                           ;software_delay.c: 14:  while (n)
  2862  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0433  0823               	movf	SwDelay_ms@n+3,w
  2865  0434  0422               	iorwf	SwDelay_ms@n+2,w
  2866  0435  0421               	iorwf	SwDelay_ms@n+1,w
  2867  0436  0420               	iorwf	SwDelay_ms@n,w
  2868  0437  1D03               	skipz
  2869  0438  2C3A               	goto	u781
  2870  0439  2C3B               	goto	u780
  2871  043A                     u781:
  2872  043A  2BFD               	goto	l2375
  2873  043B                     u780:
  2874  043B                     l535:
  2875  043B  0008               	return
  2876  043C                     __end_of_SwDelay_ms:
  2877                           
  2878                           	psect	text17
  2879  0314                     __ptext17:	
  2880 ;; *************** function _checkmyisr *****************
  2881 ;; Defined at:
  2882 ;;		line 11 in file "interrupts.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2896 ;;      Params:         0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0
  2898 ;;      Temps:          4       0       0       0       0
  2899 ;;      Totals:         4       0       0       0       0
  2900 ;;Total ram usage:        4 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    2
  2903 ;; This function calls:
  2904 ;;		Absolute function
  2905 ;;		_adc_interrupt_routine
  2906 ;;		_timer0_interrupt_ovfRoutine
  2907 ;;		_timer1_interrupt_ovfRoutine
  2908 ;;		_timer2_interrupt_ovfRoutine
  2909 ;; This function is called by:
  2910 ;;		Interrupt level 1
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function _checkmyisr
  2916  0314                     _checkmyisr:
  2917  0314                     i1l2873:
  2918                           
  2919                           ;interrupts.c: 13: if((*((reg_type8_t)(0x000B)) & 0x04 )&&(*((reg_type8_t)(0x000B)) & 0x
      +                          20))
  2920  0314  1D0B               	btfss	11,2	;volatile
  2921  0315  2B17               	goto	u101_21
  2922  0316  2B18               	goto	u101_20
  2923  0317                     u101_21:
  2924  0317  2B22               	goto	i1l2879
  2925  0318                     u101_20:
  2926  0318                     i1l2875:
  2927  0318  1E8B               	btfss	11,5	;volatile
  2928  0319  2B1B               	goto	u102_21
  2929  031A  2B1C               	goto	u102_20
  2930  031B                     u102_21:
  2931  031B  2B22               	goto	i1l2879
  2932  031C                     u102_20:
  2933  031C                     i1l2877:
  2934                           
  2935                           ;interrupts.c: 14: {;interrupts.c: 16: TIMER0OVF_INT();
  2936  031C  087D               	movf	_TIMER0OVF_INT,w
  2937  031D  120A  118A  204B  120A  118A  	fcall	i1fptable
  2938  0322                     i1l2879:
  2939                           
  2940                           ;interrupts.c: 18: if((*((reg_type8_t)(0x000C)) & 0x01 )&&(*((reg_type8_t)(0x008C)) & 0x
      +                          01))
  2941  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0324  1C0C               	btfss	12,0	;volatile
  2944  0325  2B27               	goto	u103_21
  2945  0326  2B28               	goto	u103_20
  2946  0327                     u103_21:
  2947  0327  2B36               	goto	i1l2885
  2948  0328                     u103_20:
  2949  0328                     i1l2881:
  2950  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2952  032A  1C0C               	btfss	12,0	;volatile
  2953  032B  2B2D               	goto	u104_21
  2954  032C  2B2E               	goto	u104_20
  2955  032D                     u104_21:
  2956  032D  2B36               	goto	i1l2885
  2957  032E                     u104_20:
  2958  032E                     i1l2883:
  2959                           
  2960                           ;interrupts.c: 19: {;interrupts.c: 21: TIMER1OVF_INT();
  2961  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2962  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2963  0330  0857               	movf	_TIMER1OVF_INT,w
  2964  0331  120A  118A  204B  120A  118A  	fcall	i1fptable
  2965  0336                     i1l2885:
  2966                           
  2967                           ;interrupts.c: 23: if((*((reg_type8_t)(0x000C)) & 0x02 )&&(*((reg_type8_t)(0x008C)) & 0x
      +                          02))
  2968  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0338  1C8C               	btfss	12,1	;volatile
  2971  0339  2B3B               	goto	u105_21
  2972  033A  2B3C               	goto	u105_20
  2973  033B                     u105_21:
  2974  033B  2B4A               	goto	i1l2891
  2975  033C                     u105_20:
  2976  033C                     i1l2887:
  2977  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2978  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2979  033E  1C8C               	btfss	12,1	;volatile
  2980  033F  2B41               	goto	u106_21
  2981  0340  2B42               	goto	u106_20
  2982  0341                     u106_21:
  2983  0341  2B4A               	goto	i1l2891
  2984  0342                     u106_20:
  2985  0342                     i1l2889:
  2986                           
  2987                           ;interrupts.c: 24: {;interrupts.c: 26: TIMER2OVF_INT();
  2988  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0344  0856               	movf	_TIMER2OVF_INT,w
  2991  0345  120A  118A  204B  120A  118A  	fcall	i1fptable
  2992  034A                     i1l2891:
  2993                           
  2994                           ;interrupts.c: 28: if((*((reg_type8_t)(0x000C)) & 0x40 )&&(*((reg_type8_t)(0x008C)) & 0x
      +                          40))
  2995  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2996  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2997  034C  1F0C               	btfss	12,6	;volatile
  2998  034D  2B4F               	goto	u107_21
  2999  034E  2B50               	goto	u107_20
  3000  034F                     u107_21:
  3001  034F  2B5E               	goto	i1l268
  3002  0350                     u107_20:
  3003  0350                     i1l2893:
  3004  0350  1683               	bsf	3,5	;RP0=1, select bank1
  3005  0351  1303               	bcf	3,6	;RP1=0, select bank1
  3006  0352  1F0C               	btfss	12,6	;volatile
  3007  0353  2B55               	goto	u108_21
  3008  0354  2B56               	goto	u108_20
  3009  0355                     u108_21:
  3010  0355  2B5E               	goto	i1l268
  3011  0356                     u108_20:
  3012  0356                     i1l2895:
  3013                           
  3014                           ;interrupts.c: 29: {;interrupts.c: 31: ADC_INT();
  3015  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0358  0850               	movf	_ADC_INT,w
  3018  0359  120A  118A  204B  120A  118A  	fcall	i1fptable
  3019  035E                     i1l268:
  3020  035E  0877               	movf	??_checkmyisr+3,w
  3021  035F  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0360  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0361  00FF               	movwf	btemp+1
  3024  0362  0876               	movf	??_checkmyisr+2,w
  3025  0363  008A               	movwf	10
  3026  0364  0875               	movf	??_checkmyisr+1,w
  3027  0365  0084               	movwf	4
  3028  0366  0E74               	swapf	??_checkmyisr^(0+4294967168),w
  3029  0367  0083               	movwf	3
  3030  0368  0EFE               	swapf	btemp,f
  3031  0369  0E7E               	swapf	btemp,w
  3032  036A  0009               	retfie
  3033  036B                     __end_of_checkmyisr:
  3034                           
  3035                           	psect	intentry
  3036  0004                     __pintentry:	
  3037                           ;incstack = 0
  3038                           ; Regs used in _checkmyisr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3039                           
  3040  0004                     interrupt_function:
  3041  007E                     saved_w	set	btemp
  3042  0004  00FE               	movwf	btemp
  3043  0005  0E03               	swapf	3,w
  3044  0006  00F4               	movwf	??_checkmyisr
  3045  0007  0804               	movf	4,w
  3046  0008  00F5               	movwf	??_checkmyisr+1
  3047  0009  080A               	movf	10,w
  3048  000A  00F6               	movwf	??_checkmyisr+2
  3049  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3050  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3051  000D  087F               	movf	btemp+1,w
  3052  000E  00F7               	movwf	??_checkmyisr+3
  3053  000F  120A  118A  2B14   	ljmp	_checkmyisr
  3054                           
  3055                           	psect	text18
  3056  0576                     __ptext18:	
  3057 ;; *************** function _timer1_interrupt_ovfRoutine *****************
  3058 ;; Defined at:
  3059 ;;		line 116 in file "Timer.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, btemp+1
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_checkmyisr
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           
  3087                           ;psect for function _timer1_interrupt_ovfRoutine
  3088  0576                     _timer1_interrupt_ovfRoutine:
  3089  0576                     i1l2607:	
  3090                           ;incstack = 0
  3091                           ; Regs used in _timer1_interrupt_ovfRoutine: [wreg+status,2+status,0+btemp+1]
  3092                           
  3093                           
  3094                           ;Timer.c: 119:  *((reg_type8_t)(0x0087))=0x00;
  3095  0576  1683               	bsf	3,5	;RP0=1, select bank1
  3096  0577  1303               	bcf	3,6	;RP1=0, select bank1
  3097  0578  0187               	clrf	7	;volatile
  3098  0579                     i1l2609:
  3099                           
  3100                           ;Timer.c: 120:  *((reg_type8_t)(0x0007)) ^= 0xff;
  3101  0579  30FF               	movlw	255
  3102  057A  00FF               	movwf	btemp+1
  3103  057B  087F               	movf	btemp+1,w
  3104  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3105  057D  1303               	bcf	3,6	;RP1=0, select bank0
  3106  057E  0687               	xorwf	7,f	;volatile
  3107  057F                     i1l2611:
  3108                           
  3109                           ;Timer.c: 122: *((reg_type8_t)(0x0007)) ^= 0xFF;
  3110  057F  30FF               	movlw	255
  3111  0580  00FF               	movwf	btemp+1
  3112  0581  087F               	movf	btemp+1,w
  3113  0582  0687               	xorwf	7,f	;volatile
  3114  0583                     i1l2613:
  3115                           
  3116                           ;Timer.c: 124: *((reg_type8_t)(0x000C)) &= (~0x01);
  3117  0583  30FE               	movlw	254
  3118  0584  00FF               	movwf	btemp+1
  3119  0585  087F               	movf	btemp+1,w
  3120  0586  058C               	andwf	12,f	;volatile
  3121  0587                     i1l58:
  3122  0587  0008               	return
  3123  0588                     __end_of_timer1_interrupt_ovfRoutine:
  3124                           
  3125                           	psect	text19
  3126  0599                     __ptext19:	
  3127 ;; *************** function _timer0_interrupt_ovfRoutine *****************
  3128 ;; Defined at:
  3129 ;;		line 108 in file "Timer.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, btemp+1
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_checkmyisr
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _timer0_interrupt_ovfRoutine
  3158  0599                     _timer0_interrupt_ovfRoutine:
  3159  0599                     i1l2599:	
  3160                           ;incstack = 0
  3161                           ; Regs used in _timer0_interrupt_ovfRoutine: [wreg+status,2+status,0+btemp+1]
  3162                           
  3163  0599  1683               	bsf	3,5	;RP0=1, select bank1
  3164  059A  1303               	bcf	3,6	;RP1=0, select bank1
  3165  059B  0187               	clrf	7	;volatile
  3166  059C                     i1l2601:
  3167                           
  3168                           ;Timer.c: 110: *((reg_type8_t)(0x001F)) |=0x04;
  3169  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3170  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3171  059E  151F               	bsf	31,2	;volatile
  3172  059F                     i1l2603:
  3173                           
  3174                           ;Timer.c: 111: *((reg_type8_t)(0x0007)) ^= 0xFF;
  3175  059F  30FF               	movlw	255
  3176  05A0  00FF               	movwf	btemp+1
  3177  05A1  087F               	movf	btemp+1,w
  3178  05A2  0687               	xorwf	7,f	;volatile
  3179  05A3                     i1l2605:
  3180                           
  3181                           ;Timer.c: 114: *((reg_type8_t)(0x000B)) &= (~0x04);
  3182  05A3  30FB               	movlw	251
  3183  05A4  00FF               	movwf	btemp+1
  3184  05A5  087F               	movf	btemp+1,w
  3185  05A6  058B               	andwf	11,f	;volatile
  3186  05A7                     i1l55:
  3187  05A7  0008               	return
  3188  05A8                     __end_of_timer0_interrupt_ovfRoutine:
  3189                           
  3190                           	psect	text20
  3191  050F                     __ptext20:	
  3192 ;; *************** function _timer2_interrupt_ovfRoutine *****************
  3193 ;; Defined at:
  3194 ;;		line 126 in file "Timer.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, btemp+1
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3208 ;;      Params:         0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_checkmyisr
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _timer2_interrupt_ovfRoutine
  3223  050F                     _timer2_interrupt_ovfRoutine:
  3224  050F                     i1l2615:	
  3225                           ;incstack = 0
  3226                           ; Regs used in _timer2_interrupt_ovfRoutine: [wreg+status,2+status,0+btemp+1]
  3227                           
  3228                           
  3229                           ;Timer.c: 128:     u8_timer2Count++;
  3230  050F  3001               	movlw	1
  3231  0510  00FF               	movwf	btemp+1
  3232  0511  087F               	movf	btemp+1,w
  3233  0512  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0513  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0514  07D4               	addwf	_u8_timer2Count,f
  3236  0515                     i1l2617:
  3237                           
  3238                           ;Timer.c: 129:     if(u8_timer2Count == 2)
  3239  0515  3002               	movlw	2
  3240  0516  0654               	xorwf	_u8_timer2Count,w
  3241  0517  1D03               	btfss	3,2
  3242  0518  2D1A               	goto	u93_21
  3243  0519  2D1B               	goto	u93_20
  3244  051A                     u93_21:
  3245  051A  2D25               	goto	i1l61
  3246  051B                     u93_20:
  3247  051B                     i1l2619:
  3248                           
  3249                           ;Timer.c: 130:     {;Timer.c: 131:     *((reg_type8_t)(0x0087))=0x00;
  3250  051B  1683               	bsf	3,5	;RP0=1, select bank1
  3251  051C  1303               	bcf	3,6	;RP1=0, select bank1
  3252  051D  0187               	clrf	7	;volatile
  3253  051E                     i1l2621:
  3254                           
  3255                           ;Timer.c: 132:     *((reg_type8_t)(0x0007)) ^= 0xff;
  3256  051E  30FF               	movlw	255
  3257  051F  00FF               	movwf	btemp+1
  3258  0520  087F               	movf	btemp+1,w
  3259  0521  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0522  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0523  0687               	xorwf	7,f	;volatile
  3262  0524                     i1l2623:
  3263                           
  3264                           ;Timer.c: 133:     u8_timer2Count=0;
  3265  0524  01D4               	clrf	_u8_timer2Count
  3266  0525                     i1l61:	
  3267                           ;Timer.c: 134:     }
  3268                           
  3269                           
  3270                           ;Timer.c: 135: *((reg_type8_t)(0x000C)) &= (~0x02);
  3271  0525  30FD               	movlw	253
  3272  0526  00FF               	movwf	btemp+1
  3273  0527  087F               	movf	btemp+1,w
  3274  0528  058C               	andwf	12,f	;volatile
  3275  0529                     i1l62:
  3276  0529  0008               	return
  3277  052A                     __end_of_timer2_interrupt_ovfRoutine:
  3278                           
  3279                           	psect	text21
  3280  0588                     __ptext21:	
  3281 ;; *************** function _adc_interrupt_routine *****************
  3282 ;; Defined at:
  3283 ;;		line 53 in file "ADC.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    1
  3304 ;; This function calls:
  3305 ;;		_clear_int_flag
  3306 ;; This function is called by:
  3307 ;;		_ADC_INIT
  3308 ;;		_checkmyisr
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _adc_interrupt_routine
  3314  0588                     _adc_interrupt_routine:
  3315  0588                     i1l2733:	
  3316                           ;incstack = 0
  3317                           ; Regs used in _adc_interrupt_routine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3318                           
  3319                           
  3320                           ;ADC.c: 55: u16_result_data=((*((reg_type8_t)(0x001E))<<8)+*((reg_type8_t)(0x009E)));
  3321  0588  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0589  1303               	bcf	3,6	;RP1=0, select bank0
  3323  058A  081E               	movf	30,w	;volatile
  3324  058B  00CB               	movwf	_u16_result_data+1
  3325  058C  1683               	bsf	3,5	;RP0=1, select bank1
  3326  058D  1303               	bcf	3,6	;RP1=0, select bank1
  3327  058E  081E               	movf	30,w	;volatile
  3328  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0591  00CA               	movwf	_u16_result_data
  3331  0592                     i1l2735:
  3332                           
  3333                           ;ADC.c: 56: clear_int_flag(0x40);
  3334  0592  3040               	movlw	64
  3335  0593  120A  118A  243C  120A  118A  	fcall	_clear_int_flag
  3336  0598                     i1l419:
  3337  0598  0008               	return
  3338  0599                     __end_of_adc_interrupt_routine:
  3339                           
  3340                           	psect	text22
  3341  043C                     __ptext22:	
  3342 ;; *************** function _clear_int_flag *****************
  3343 ;; Defined at:
  3344 ;;		line 142 in file "interrupts.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  u8_interrupt    1    wreg     unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  u8_interrupt    1    3[COMMON] unsigned char 
  3349 ;;  ret_error       1    2[COMMON] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      unsigned char 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3359 ;;      Params:         0       0       0       0       0
  3360 ;;      Locals:         2       0       0       0       0
  3361 ;;      Temps:          2       0       0       0       0
  3362 ;;      Totals:         4       0       0       0       0
  3363 ;;Total ram usage:        4 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_adc_interrupt_routine
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           
  3373                           ;psect for function _clear_int_flag
  3374  043C                     _clear_int_flag:
  3375                           
  3376                           ;incstack = 0
  3377                           ; Regs used in _clear_int_flag: [wreg-fsr0h+status,2+status,0+btemp+1]
  3378                           ;clear_int_flag@u8_interrupt_prepherals stored from wreg
  3379  043C  00F3               	movwf	clear_int_flag@u8_interrupt_prepherals
  3380  043D                     i1l2385:
  3381                           
  3382                           ;interrupts.c: 142: ERROR_STATUS clear_int_flag(uint8_t u8_interrupt_prepherals);interru
      +                          pts.c: 143: {;interrupts.c: 144:     uint8_t ret_error = 0;
  3383  043D  01F2               	clrf	clear_int_flag@ret_error
  3384                           
  3385                           ;interrupts.c: 145: switch (u8_interrupt_prepherals) {
  3386  043E  2C5E               	goto	i1l2399
  3387  043F                     i1l2387:
  3388                           
  3389                           ;interrupts.c: 147:        (*((reg_type8_t)(0x000B)) &=(~(1<<0x04)));
  3390  043F  30EF               	movlw	239
  3391  0440  00FF               	movwf	btemp+1
  3392  0441  087F               	movf	btemp+1,w
  3393  0442  058B               	andwf	11,f	;volatile
  3394                           
  3395                           ;interrupts.c: 148:         break;
  3396  0443  2C77               	goto	i1l317
  3397  0444                     i1l2389:
  3398                           
  3399                           ;interrupts.c: 150:       (*((reg_type8_t)(0x000C)) &=(~(1<<0x01)));
  3400  0444  30FD               	movlw	253
  3401  0445  00FF               	movwf	btemp+1
  3402  0446  087F               	movf	btemp+1,w
  3403  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0449  058C               	andwf	12,f	;volatile
  3406                           
  3407                           ;interrupts.c: 151:  break;
  3408  044A  2C77               	goto	i1l317
  3409  044B                     i1l2391:
  3410                           
  3411                           ;interrupts.c: 153:       (*((reg_type8_t)(0x000C)) &=(~(1<<0x02)));
  3412  044B  30FB               	movlw	251
  3413  044C  00FF               	movwf	btemp+1
  3414  044D  087F               	movf	btemp+1,w
  3415  044E  1283               	bcf	3,5	;RP0=0, select bank0
  3416  044F  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0450  058C               	andwf	12,f	;volatile
  3418                           
  3419                           ;interrupts.c: 154:  break;
  3420  0451  2C77               	goto	i1l317
  3421  0452                     i1l2393:
  3422                           
  3423                           ;interrupts.c: 159: *((reg_type8_t)(0x000C)) &= (~0x40);
  3424  0452  30BF               	movlw	191
  3425  0453  00FF               	movwf	btemp+1
  3426  0454  087F               	movf	btemp+1,w
  3427  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0457  058C               	andwf	12,f	;volatile
  3430                           
  3431                           ;interrupts.c: 160:         break;
  3432  0458  2C77               	goto	i1l317
  3433  0459                     i1l2395:
  3434                           
  3435                           ;interrupts.c: 162:     ret_error += 1 + 28;
  3436  0459  301D               	movlw	29
  3437  045A  00FF               	movwf	btemp+1
  3438  045B  087F               	movf	btemp+1,w
  3439  045C  07F2               	addwf	clear_int_flag@ret_error,f
  3440                           
  3441                           ;interrupts.c: 163:     break;
  3442  045D  2C77               	goto	i1l317
  3443  045E                     i1l2399:
  3444  045E  0873               	movf	clear_int_flag@u8_interrupt_prepherals,w
  3445  045F  00F0               	movwf	??_clear_int_flag
  3446  0460  01F1               	clrf	??_clear_int_flag+1
  3447                           
  3448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3449                           ; Switch size 1, requested type "simple"
  3450                           ; Number of cases is 1, Range of values is 0 to 0
  3451                           ; switch strategies available:
  3452                           ; Name         Instructions Cycles
  3453                           ; simple_byte            4     3 (average)
  3454                           ; direct_byte           11     8 (fixed)
  3455                           ; jumptable            260     6 (fixed)
  3456                           ;	Chosen strategy is simple_byte
  3457  0461  0871               	movf	??_clear_int_flag+1,w
  3458  0462  3A00               	xorlw	0	; case 0
  3459  0463  1903               	skipnz
  3460  0464  2C66               	goto	i1l3457
  3461  0465  2C59               	goto	i1l2395
  3462  0466                     i1l3457:
  3463                           
  3464                           ; Switch size 1, requested type "simple"
  3465                           ; Number of cases is 5, Range of values is 0 to 64
  3466                           ; switch strategies available:
  3467                           ; Name         Instructions Cycles
  3468                           ; simple_byte           16     9 (average)
  3469                           ; direct_byte          203     8 (fixed)
  3470                           ; jumptable            260     6 (fixed)
  3471                           ;	Chosen strategy is simple_byte
  3472  0466  0870               	movf	??_clear_int_flag,w
  3473  0467  3A00               	xorlw	0	; case 0
  3474  0468  1903               	skipnz
  3475  0469  2C3F               	goto	i1l2387
  3476  046A  3A01               	xorlw	1	; case 1
  3477  046B  1903               	skipnz
  3478  046C  2C44               	goto	i1l2389
  3479  046D  3A03               	xorlw	3	; case 2
  3480  046E  1903               	skipnz
  3481  046F  2C4B               	goto	i1l2391
  3482  0470  3A01               	xorlw	1	; case 3
  3483  0471  1903               	skipnz
  3484  0472  2C77               	goto	i1l317
  3485  0473  3A43               	xorlw	67	; case 64
  3486  0474  1903               	skipnz
  3487  0475  2C52               	goto	i1l2393
  3488  0476  2C59               	goto	i1l2395
  3489  0477                     i1l317:
  3490  0477  0008               	return
  3491  0478                     __end_of_clear_int_flag:
  3492  0007                     
  3493                           	psect	functab
  3494  004A                     __pfunctab:
  3495  004A                     fptable:
  3496  004A  284A               	goto	fptable	;no entries
  3497  004B                     __i1fptable:
  3498  004B                     i1fptable:
  3499  004B  00FF               	movwf	(btemp+1)& (0+127)
  3500  004C  3000               	movlw	high i1fptable
  3501  004D  008A               	movwf	10
  3502  004E  087F               	movf	(btemp+1)& (0+127),w
  3503  004F  0782               	addwf	2,f
  3504  0050                     i1fpbase:
  3505  0050  2850               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  3506  0051                     fp__adc_interrupt_routine:
  3507  0051  120A  118A  2D88   	ljmp	_adc_interrupt_routine
  3508  0054                     fp__timer2_interrupt_ovfRoutine:
  3509  0054  120A  118A  2D0F   	ljmp	_timer2_interrupt_ovfRoutine
  3510  0057                     fp__timer0_interrupt_ovfRoutine:
  3511  0057  120A  118A  2D99   	ljmp	_timer0_interrupt_ovfRoutine
  3512  005A                     fp__timer1_interrupt_ovfRoutine:
  3513  005A  120A  118A  2D76   	ljmp	_timer1_interrupt_ovfRoutine
  3514  005D                     __end_of__i1fptable:
  3515  007E                     btemp	set	126	;btemp
  3516  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    2
    Data        38
    BSS         89
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     35      78
    BANK1            80      0      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S391Buffer_Request$Fuction_consumer	PTR FTN()void  size(1) Largest target is 0

    Buffer_Array.Fuction_consumer	PTR FTN()void  size(1) Largest target is 0

    I2C_Init@i2c_info.ActionDoneCbkPtr	PTR FTN()void  size(1) Largest target is 0

    I2C_Init@i2c_info	PTR struct . size(1) Largest target is 5
		 -> I2c_Configuration_Eeprom(BANK0[5]), 

    ADC_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), adc_interrupt_routine(), 

    S208$ActionDoneCbkPtr	PTR FTN()void  size(1) Largest target is 0

    I2c_Configuration_Eeprom.ActionDoneCbkPtr	PTR FTN()void  size(1) Largest target is 0

    DIO_init@DIO_info	PTR struct DIO_Cfg_s size(1) Largest target is 4
		 -> Dio_configutation_C(BANK0[4]), 

    Timer_Deinit_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    Timer_Deinit_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    Timer_Deinit_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    Timer_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    Timer_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    Timer_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    TIMER2OVF_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    TIMER1OVF_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    TIMER0OVF_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    S23Timer_cfg_s$Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 

    Timer_Init@Timer_cfg.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer2_interrupt_ovfRoutine(), timer1_interrupt_ovfRoutine(), timer0_interrupt_ovfRoutine(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _checkmyisr in COMMON

    _adc_interrupt_routine->_clear_int_flag

Critical Paths under _main in BANK0

    _main->_I2C_Init
    _I2C_Init->___lldiv
    ___lldiv->___lmul
    _EEPROM_Write->_I2C_Master_Write
    _EEPROM_Read->_I2C_Master_Write
    _ADC_READ->_SwDelay_ms

Critical Paths under _checkmyisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _checkmyisr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _checkmyisr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _checkmyisr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3261
                                             32 BANK0      3     3      0
                           _ADC_READ
                        _EEPROM_Read
                       _EEPROM_Write
                           _I2C_Init
                         _SwDelay_ms
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             5     5      0    1093
                                             27 BANK0      5     5      0
                           _DIO_init
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _DIO_init                                             4     4      0     418
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         3     0      3     544
                                              1 BANK0      3     0      3
                          _I2C_Begin
                            _I2C_End
           _I2C_Master_RepeatedStart
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          3     1      2     317
                                              1 BANK0      3     1      2
                          _I2C_Begin
                            _I2C_End
           _I2C_Master_RepeatedStart
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 BANK0      1     1      0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             3     1      2     550
                                             10 BANK0      3     1      2
                         _SwDelay_ms
                         _SwDelay_us
 ---------------------------------------------------------------------------------
 (2) _SwDelay_us                                           8     4      4      99
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SwDelay_ms                                          10     6      4     451
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _checkmyisr                                           4     4      0      30
                                              4 COMMON     4     4      0
                   Absolute function *
              _adc_interrupt_routine *
        _timer0_interrupt_ovfRoutine *
        _timer1_interrupt_ovfRoutine *
        _timer2_interrupt_ovfRoutine *
 ---------------------------------------------------------------------------------
 (5) _timer2_interrupt_ovfRoutine                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _timer1_interrupt_ovfRoutine                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _timer0_interrupt_ovfRoutine                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _adc_interrupt_routine                                0     0      0      30
                     _clear_int_flag
 ---------------------------------------------------------------------------------
 (6) _clear_int_flag                                       4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_READ
     _SwDelay_ms
     _SwDelay_us
   _EEPROM_Read
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Master_RepeatedStart
       _I2C_Hold
     _I2C_Master_Write
       _I2C_Hold
     _I2C_NACK
       _I2C_Hold
     _I2C_Read_Byte
       _I2C_Hold
   _EEPROM_Write
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Master_RepeatedStart
       _I2C_Hold
     _I2C_Master_Write
       _I2C_Hold
   _I2C_Init
     _DIO_init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _SwDelay_ms

 _checkmyisr (ROOT)
   Absolute function(Fake) *
   _adc_interrupt_routine *
     _clear_int_flag
   _timer0_interrupt_ovfRoutine *
   _timer1_interrupt_ovfRoutine *
   _timer2_interrupt_ovfRoutine *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AB      12        0.0%
ABS                  0      0      AB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jul 20 00:43:28 2020

                   __size_of_I2C_Begin 0009                                      pc 0002  
              clear_int_flag@ret_error 0072                                     fsr 0004  
                                  l155 0170                                    l333 0313  
                                  l342 05D4                                    l351 05E6  
                                  l416 04B2                                    l530 0409  
                                  l354 05DD                                    l348 05B4  
                                  l541 050E                                    l381 03B3  
                                  l526 0431                                    l535 043B  
                                  l375 04E6                                    l528 0410  
                                  l369 05C0                                    l641 03FB  
                                  l538 0504                                    l663 02B1  
                                  u800 050E                                    u720 0068  
                                  u801 050D                                    u721 0067  
                                  u650 05B0                                    u730 00A6  
                                  u810 03C2                                    u651 05AF  
                                  u731 00A5                                    u811 03C1  
                                  u660 05B4                                    u740 00B5  
                                  u900 028B                                    u661 05B3  
                                  u741 00B4                                    u901 028A  
                                  u821 03CB                                    u750 040E  
                                  u822 03D2                                    u751 040D  
                                  u823 03D9                                    u760 0415  
                                  u920 02A9                                    u761 0414  
                                  u921 02A8                                    u905 0287  
                                  u770 0431                                    u850 03F3  
                                  u915 029B                                    u851 03F2  
                                  u835 03DB                                    u780 043B  
                                  u860 025C                                    u781 043A  
                                  u861 025B                                    u845 03E3  
                                  u790 0504                                    u775 0424  
                                  u776 0425                                    u960 04C9  
                                  u880 0270                                    u777 042A  
                                  u961 04C8                                    u881 026F  
                                  u778 042B                                    u970 0381  
                                  u779 0430                                    u795 04F7  
                                  u971 0380                                    u875 0261  
                                  u796 04F8                                    u797 04FD  
                                  u798 04FE                                    u990 04AA  
                                  u799 0503                                    u991 04A9  
                                  u895 0272                                    u985 04A1  
                      __end_of_I2C_End 05DE                                    _ret 0051  
                                  fsr0 0004                                    indf 0000  
             fp__adc_interrupt_routine 0051                                   l2201 05A8  
                                 l2203 05A8                                   l2205 05B0  
                                 l2301 00A6                                   l2311 00CA  
                                 l2303 00AF                                   l2321 00ED  
                                 l2313 00D4                                   l2331 0130  
                                 l2323 0108                                   l2315 00DE  
                                 l2307 00B6                                   l2421 05DE  
                                 l2405 0554                                   l2325 0112  
                                 l2317 00E8                                   l2309 00C0  
                                 l3301 0211                                   l2423 05E3  
                                 l2407 0559                                   l2431 05C6  
                                 l2327 011C                                   l2343 015A  
                                 l3303 021E                                   l2425 05D5  
                                 l2417 05CC                                   l2409 055F  
                                 l2433 05C9                                   l2337 013A  
                                 l2329 0126                                   l2345 016C  
                                 l3305 022E                                   l2451 04E8  
                                 l2427 05DA                                   l2419 05D1  
                                 l2443 05B5                                   l2339 0155  
                                 l2291 0079                                   l2283 0069  
                                 l2275 0060                                   l3307 023B  
                                 l2381 040E                                   l2373 03FC  
                                 l2445 05B8                                   l2429 05C1  
                                 l2701 0381                                   l2285 006D  
                                 l2277 0061                                   l2461 03E2  
                                 l2453 03B4                                   l3261 02C4  
                                 l2383 0415                                   l2375 03FD  
                                 l2447 05BD                                   l2711 03AB  
                                 l2703 0391                                   l2287 0071  
                                 l2295 007D                                   l2279 0063  
                                 l2471 025F                                   l2463 03F3  
                                 l2455 03BE                                   l3263 0312  
                                 l3255 02B5                                   l3271 0181  
                                 l2377 0402                                   l2449 04E7  
                                 l2721 048D                                   l2713 03B0  
                                 l2705 0396                                   l2289 0075  
                                 l2297 0099                                   l2481 028B  
                                 l2473 0268                                   l2457 03C2  
                                 l3257 02BB                                   l3281 01AD  
                                 l3273 018E                                   l3265 0171  
                                 l2379 0407                                   l2723 048E  
                                 l2707 039C                                   l3451 00F7  
                                 l2299 009E                                   l2483 0299  
                                 l2475 026C                                   l2467 024A  
                                 l2459 03D9                                   l3259 02C1  
                                 l3291 01D8                                   l3283 01B3  
                                 l3275 0194                                   l3267 0177  
                                 l2725 049B                                   l2717 0478  
                                 l2709 03A6                                   l3453 0144  
                                 l2485 029A                                   l2477 0270  
                                 l2469 025C                                   l3293 01E8  
                                 l3285 01C0                                   l3277 019A  
                                 l3269 017D                                   l2727 049E  
                                 l2719 0487                                   l3455 0164  
                                 l2487 02A3                                   l2479 0279  
                                 l3295 01EE                                   l3287 01CF  
                                 l3279 01A7                                   l2729 04AA  
                                 l3449 0088                                   l2489 02A9  
                                 l3297 01FB                                   l3289 01D5  
                                 l2691 04C9                                   l3299 020B  
                                 l2693 04E1                                   l2685 04B3  
                                 l2695 036B                                   l2687 04B9  
                                 l2697 0371                                   l2689 04BE  
                                 l2699 0376                                   u1270 02DA  
                                 u1275 02D5                                   i1l61 0525  
                                 i1l62 0529                                   i1l55 05A7  
                                 i1l58 0587    __end_of_timer0_interrupt_ovfRoutine 05A8  
          _timer0_interrupt_ovfRoutine 0599                       __end_of_I2C_NACK 05C1  
     __end_of_I2C_Master_RepeatedStart 05D5                       __end_of_ADC_READ 04B3  
                                 _main 0171                       __end_of_I2C_Hold 05B5  
                     __end_of_I2C_Init 0314                                   btemp 007E  
                                 start 0012                        EEPROM_Write@add 0021  
          _Timer_Deinit_Configuration0 00D6            _Timer_Deinit_Configuration1 00C9  
          _Timer_Deinit_Configuration2 00C4                   __end_of_EEPROM_Write 04E7  
                     __end_of_DIO_init 0171                                  ?_main 0070  
 __size_of_timer2_interrupt_ovfRoutine 001B                        __end_of___lldiv 02B2  
                                i1l317 0477                                  i1l419 0598  
                                i1l268 035E                                  u93_20 051B  
                                u93_21 051A                    ___lmul@multiplicand 0024  
                    __end_of_I2C_Begin 05E7                 __size_of_I2C_Read_Byte 000B  
                                _start 00BC                                  fpbase 0000  
                                pclath 000A                                  status 0003  
                                wtemp0 007E                       EEPROM_Write@data 0023  
                 __size_of_EEPROM_Read 0049                __size_of_clear_int_flag 003C  
                      __initialization 0015                           __end_of_main 024A  
                            ??_I2C_End 0020                                 ??_main 0040  
                    ?_I2C_Master_Write 0070                     ??_I2C_Master_Write 0020  
                           _SwDelay_ms 03FC                             _SwDelay_us 04E7  
                               u101_20 0318                                 u101_21 0317  
                               u102_20 031C                                 u102_21 031B  
                               u103_20 0328                                 u103_21 0327  
                               u104_20 032E                                 u104_21 032D  
                               u105_20 033C                                 i1l2601 059C  
                               u105_21 033B                                 i1l2603 059F  
                               i1l2611 057F                                 i1l2621 051E  
                               i1l2605 05A3                                 i1l2613 0583  
                               i1l2391 044B                                 i1l2623 0524  
                               i1l2615 050F                                 i1l2607 0576  
                               u106_20 0342                                 i1l2393 0452  
                               i1l2385 043D                                 i1l2617 0515  
                               i1l2609 0579                                 u106_21 0341  
                               i1l2395 0459                                 i1l2387 043F  
                               i1l2619 051B                                 i1l2389 0444  
                               i1l2733 0588                                 i1l2399 045E  
                               i1l2735 0592                                 u107_20 0350  
                               i1l3457 0466                                 u107_21 034F  
                               i1l2599 0599                                 u108_20 0356  
                               u108_21 0355                                 i1l2881 0328  
                               i1l2873 0314                                 i1l2891 034A  
                               i1l2883 032E                                 i1l2875 0318  
                               i1l2893 0350                                 i1l2885 0336  
                               i1l2877 031C                                 i1l2895 0356  
                               i1l2887 033C                                 i1l2879 0322  
                               i1l2889 0342                             __i1fptable 004B  
               DIO_Write@first_powerup 0052               _I2C_Master_RepeatedStart 05CC  
                        _I2C_Read_Byte 05C1                                 ___lmul 03B4  
                            ??___lldiv 0035                             _Prescaler0 0063  
                           _Prescaler1 0055                              ?_I2C_NACK 0070  
                               fptable 004A                              ?_ADC_READ 002A  
                               fptotal 0000                              ?_I2C_Hold 0070  
                            ?_I2C_Init 003B                  _adc_interrupt_routine 0588  
                               saved_w 007E                __end_of__initialization 0046  
         ?_timer1_interrupt_ovfRoutine 0070                              ?_DIO_init 0070  
                     I2C_Init@i2c_info 003F                  __size_of_EEPROM_Write 0034  
                       ?_I2C_Read_Byte 0070                         __pcstackCOMMON 0070  
                         __pidataBANK0 0564                           __pidataBANK1 052A  
                          SwDelay_ms@n 0020                            SwDelay_us@n 0020  
       fp__timer0_interrupt_ovfRoutine 0057                             ??_I2C_NACK 0020  
                           ??_ADC_READ 002C                             ??_I2C_Hold 0020  
                           ??_I2C_Init 003B                         _u8_timer2Count 0054  
                          ?_SwDelay_ms 0020                            ?_SwDelay_us 0020  
                         _EEPROM_Write 04B3                             __pbssBANK0 0043  
                           __pbssBANK1 00A0                             ??_DIO_init 0020  
                           _checkmyisr 0314                       _u8_Is_Intialized 007A  
        ??_timer1_interrupt_ovfRoutine 0070                         _clear_int_flag 043C  
                           __pmaintext 0171                                ?___lmul 0020  
                           __pintentry 0004                                _ADC_INT 0050  
                              _I2C_End 05D5                         ___lmul@product 0029  
               ?_adc_interrupt_routine 0070                      _TMU_Configuration 05ED  
                         _Buffer_Array 00A0                             __stringtab 05E7  
  __end_of_timer2_interrupt_ovfRoutine 052A            _timer2_interrupt_ovfRoutine 050F  
                              i1fpbase 0050                              _I2C_Begin 05DE  
               __end_of_clear_int_flag 0478                        ??_I2C_Read_Byte 0020  
           DIO_init@first_powerup_init 0053                        _u16_result_data 004A  
                      __size_of___lmul 0048                                ___lldiv 024A  
                  __size_of_SwDelay_ms 0040                    __size_of_SwDelay_us 0028  
            __end_of_TMU_Configuration 05EF                                __ptext1 02B2  
                              __ptext2 03B4                                __ptext3 024A  
                              __ptext4 005D                                __ptext5 04B3  
                              __ptext6 036B                                __ptext7 05C1  
                              __ptext8 05B5                                __ptext9 0551  
 __size_of_timer1_interrupt_ovfRoutine 0012                    __size_of__i1fptable 0012  
                              _is_init 006D                                clrloop0 05F0  
                 end_of_initialization 0046             ??_I2C_Master_RepeatedStart 0020  
                           ?_I2C_Begin 0070                          ??_EEPROM_Read 0023  
                          ?_checkmyisr 0070                        ?_clear_int_flag 0070  
            __size_of_I2C_Master_Write 0013                        ___lldiv@divisor 002D  
                      ___lldiv@counter 003A                      __size_of_I2C_NACK 000C  
                    __size_of_ADC_READ 003B                      __size_of_I2C_Hold 000D  
                    __size_of_I2C_Init 0062     pushButtonGetStatus@u8_Button_press 0058  
clear_int_flag@u8_interrupt_prepherals 0073                      __size_of_DIO_init 0114  
                        _TIMER0OVF_INT 007D                          _TIMER1OVF_INT 0057  
                        _TIMER2OVF_INT 0056                    __end_of_EEPROM_Read 03B4  
                       __end_of___lmul 03FC                   _u8global_int_enabled 007C  
                  __size_of_checkmyisr 0057                    start_initialization 0015  
                         ??_SwDelay_ms 0024                           ??_SwDelay_us 0024  
         ?_timer0_interrupt_ovfRoutine 0070                            ??_I2C_Begin 0020  
                     _u8_Init_finished 004F                      DIO_init@ret_error 0022  
                             ??___lmul 0028                             init_fetch0 053E  
                  _Dio_configutation_A 005F                    _Dio_configutation_B 005B  
                  _Dio_configutation_C 0069                    _Dio_configutation_D 0043  
                  _Dio_configutation_E 00D2                            __pdataBANK0 005B  
                          __pdataBANK1 00DB                ??_adc_interrupt_routine 0074  
                             ?_I2C_End 0070                     __end_of_SwDelay_ms 043C  
                   __end_of_SwDelay_us 050F         fp__timer2_interrupt_ovfRoutine 0054  
                   __end_of__i1fptable 005D                            __pbssCOMMON 0078  
                            ___latbits 0002                          __pcstackBANK0 0020  
                     DIO_init@DIO_info 0023                            _EEPROM_Read 036B  
              _u8prepheral_int_enabled 007B          ??_timer0_interrupt_ovfRoutine 0070  
                            __pnvBANK0 006D                       _I2C_Master_Write 0551  
                 _Timer_Configuration0 00EA                   _Timer_Configuration1 00E0  
                 _Timer_Configuration2 00E5                              __pfunctab 004A  
                             ?___lldiv 002D                   I2C_Master_Write@data 0020  
                            __pstrings 05E7                               _I2C_NACK 05B5  
                             _ADC_READ 0478                               _I2C_Hold 05A8  
                             _I2C_Init 02B2                       ??_clear_int_flag 0070  
  __end_of_timer1_interrupt_ovfRoutine 0588            _timer1_interrupt_ovfRoutine 0576  
                    interrupt_function 0004                               _DIO_init 005D  
                         ??_checkmyisr 0074                              clear_ram0 05EF  
                __end_of_I2C_Read_Byte 05CC                       __size_of_I2C_End 0009  
 __size_of_timer0_interrupt_ovfRoutine 000F                            __stringbase 05EC  
                   __end_of_checkmyisr 036B                         _stu8_increment 004E  
                             i1fptable 004B                      ___lmul@multiplier 0020  
                             i1fptotal 0007                               _u16_data 004C  
                         _u8_FUN_index 0079      __size_of_I2C_Master_RepeatedStart 0009  
            ?_I2C_Master_RepeatedStart 0070                       __size_of___lldiv 0068  
                   __end_of__stringtab 05ED                  SwDelay_ms@counter_256 0028  
                _u8Excution_to_be_done 0078                               __ptext10 05CC  
                             __ptext11 05D5                               __ptext20 050F  
                             __ptext12 05DE                               __ptext21 0588  
                             __ptext13 05A8                               __ptext22 043C  
                             __ptext14 0478                               __ptext15 04E7  
                             __ptext16 03FC                               __ptext17 0314  
                             __ptext18 0576                               __ptext19 0599  
                        ?_EEPROM_Write 0021                          __size_of_main 00D9  
pushButtonGetStatus@u8_S_button_status 0047                               main@Data 0040  
       __size_of_adc_interrupt_routine 0011          __end_of_adc_interrupt_routine 0599  
             _I2c_Configuration_Eeprom 0064               __end_of_I2C_Master_Write 0564  
                             init_ram0 0542                         ??_EEPROM_Write 0024  
                             intlevel1 004A                   SwDelay_ms@counter_21 0029  
         ?_timer2_interrupt_ovfRoutine 0070                           ?_EEPROM_Read 0021  
                     ___lldiv@dividend 0031                              stringcode 05E7  
                     _ADC_Cnfiguration 00DB         fp__timer1_interrupt_ovfRoutine 005A  
                     ___lldiv@quotient 0036                               stringdir 05E7  
                             stringtab 05E7                           _Start_status 00CE  
                      EEPROM_Read@Data 0023          ??_timer2_interrupt_ovfRoutine 0070  
                       EEPROM_Read@add 0021                            main@Address 0041  
