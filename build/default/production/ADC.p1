Version 4.0 HI-TECH Software Intermediate Code
"14 ./ADC_Config.h
[; ;./ADC_Config.h: 14: typedef struct ADC_Cfg_s{
[s S2 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S2 ADC_Cfg_s u8_Channel_Number u8_Prescaler clock_configuration u8_ten_bit_arrangment u8_polling_interrupt ]
"40 ./interrupts.h
[; ;./interrupts.h: 40: ERROR_STATUS special_int_enable(uint8_t u8_interrupt_prepherals);
[v _special_int_enable `(uc ~T0 @X0 0 ef1`uc ]
[v F24 `(v ~T0 @X0 0 tf ]
"35
[; ;./interrupts.h: 35: extern ptr_to_Fun ADC_INT ;
[v _ADC_INT `*F24 ~T0 @X0 0 e ]
"22 ./ADC.h
[; ;./ADC.h: 22: void adc_interrupt_routine(void);
[v _adc_interrupt_routine `(v ~T0 @X0 0 ef ]
"39 ./interrupts.h
[; ;./interrupts.h: 39: ERROR_STATUS special_int_disable(uint8_t u8_interrupt_prepherals);
[v _special_int_disable `(uc ~T0 @X0 0 ef1`uc ]
"16 ./softwareDelay.h
[; ;./softwareDelay.h: 16: void SwDelay_ms(uint32_t n);
[v _SwDelay_ms `(v ~T0 @X0 0 ef1`ul ]
"23
[; ;./softwareDelay.h: 23: void SwDelay_us(uint32_t n);
[v _SwDelay_us `(v ~T0 @X0 0 ef1`ul ]
"42 ./interrupts.h
[; ;./interrupts.h: 42: ERROR_STATUS clear_int_flag(uint8_t u8_interrupt_prepherals);
[v _clear_int_flag `(uc ~T0 @X0 0 ef1`uc ]
"3 ADC.c
[; ;ADC.c: 3: static uint16_t u16_result_data = 0;
[v _u16_result_data `ui ~T0 @X0 1 s ]
[i _u16_result_data
-> -> 0 `i `ui
]
"4
[; ;ADC.c: 4: ERROR_STATUS ADC_INIT(ADC_Cfg_s *ADC_info)
[v _ADC_INIT `(uc ~T0 @X0 1 ef1`*S2 ]
"5
[; ;ADC.c: 5: {
{
[e :U _ADC_INIT ]
"4
[; ;ADC.c: 4: ERROR_STATUS ADC_INIT(ADC_Cfg_s *ADC_info)
[v _ADC_info `*S2 ~T0 @X0 1 r1 ]
"5
[; ;ADC.c: 5: {
[f ]
"6
[; ;ADC.c: 6:     uint8_t ret_error=0;
[v _ret_error `uc ~T0 @X0 1 a ]
[e = _ret_error -> -> 0 `i `uc ]
"8
[; ;ADC.c: 8:     if((ADC_info -> u8_Prescaler ) <= 3)
[e $ ! <= -> . *U _ADC_info 1 `i -> 3 `i 4  ]
"9
[; ;ADC.c: 9:     {
{
"10
[; ;ADC.c: 10:         *((reg_type8_t)(0x001F)) |= (ADC_info -> u8_Channel_Number)|(ADC_info -> clock_configuration )|0x01;
[e =| *U -> -> 31 `i `*Vuc -> | | -> . *U _ADC_info 0 `i -> . *U _ADC_info 2 `i -> 1 `i `uc ]
"11
[; ;ADC.c: 11:         *((reg_type8_t)(0x009F)) &= (~0x40);
[e =& *U -> -> 159 `i `*Vuc -> ~ -> 64 `i `uc ]
"12
[; ;ADC.c: 12:         *((reg_type8_t)(0x009F)) |=(ADC_info -> u8_ten_bit_arrangment);
[e =| *U -> -> 159 `i `*Vuc -> . *U _ADC_info 3 `uc ]
"13
[; ;ADC.c: 13:     }else if(((ADC_info -> u8_Prescaler ) > 3 )
}
[e $U 5  ]
[e :U 4 ]
[e $ ! && > -> . *U _ADC_info 1 `i -> 3 `i <= -> . *U _ADC_info 1 `i -> 7 `i 6  ]
"15
[; ;ADC.c: 15:   {
{
"16
[; ;ADC.c: 16:          *((reg_type8_t)(0x001F)) |= (ADC_info -> u8_Channel_Number)|(ADC_info -> clock_configuration )|0x01;
[e =| *U -> -> 31 `i `*Vuc -> | | -> . *U _ADC_info 0 `i -> . *U _ADC_info 2 `i -> 1 `i `uc ]
"17
[; ;ADC.c: 17:       *((reg_type8_t)(0x009F)) |= 0x40 | (ADC_info -> u8_ten_bit_arrangment);
[e =| *U -> -> 159 `i `*Vuc -> | -> 64 `i -> . *U _ADC_info 3 `i `uc ]
"19
[; ;ADC.c: 19:          }else{ret_error += 1 + 30;}
}
[e $U 7  ]
[e :U 6 ]
{
[e =+ _ret_error -> + -> 1 `i -> 30 `i `uc ]
}
[e :U 7 ]
[e :U 5 ]
"21
[; ;ADC.c: 21:     switch(ADC_info -> u8_polling_interrupt)
[e $U 9  ]
"22
[; ;ADC.c: 22:     {
{
"23
[; ;ADC.c: 23:     case 0x40:
[e :U 10 ]
"24
[; ;ADC.c: 24:         ret_error=special_int_enable(0x40);
[e = _ret_error ( _special_int_enable (1 -> -> 64 `i `uc ]
"25
[; ;ADC.c: 25:       ADC_INT = adc_interrupt_routine;
[e = _ADC_INT &U _adc_interrupt_routine ]
"26
[; ;ADC.c: 26:         break;
[e $U 8  ]
"27
[; ;ADC.c: 27:     case 0xBF:
[e :U 11 ]
"28
[; ;ADC.c: 28:         special_int_disable(0x40);
[e ( _special_int_disable (1 -> -> 64 `i `uc ]
"30
[; ;ADC.c: 30:     break;
[e $U 8  ]
"32
[; ;ADC.c: 32:     }
}
[e $U 8  ]
[e :U 9 ]
[e [\ -> . *U _ADC_info 4 `i , $ -> 64 `i 10
 , $ -> 191 `i 11
 8 ]
[e :U 8 ]
"35
[; ;ADC.c: 35:     return ret_error;
[e ) _ret_error ]
[e $UE 3  ]
"36
[; ;ADC.c: 36: }
[e :UE 3 ]
}
"39
[; ;ADC.c: 39: uint16_t ADC_READ(void)
[v _ADC_READ `(ui ~T0 @X0 1 ef ]
"40
[; ;ADC.c: 40: {
{
[e :U _ADC_READ ]
[f ]
"41
[; ;ADC.c: 41: SwDelay_ms(2);
[e ( _SwDelay_ms (1 -> -> -> 2 `i `l `ul ]
"43
[; ;ADC.c: 43:     *((reg_type8_t)(0x001F)) &= 0b11000101;
[e =& *U -> -> 31 `i `*Vuc -> -> 197 `i `uc ]
"44
[; ;ADC.c: 44:     *((reg_type8_t)(0x001F)) |= 0x00;
[e =| *U -> -> 31 `i `*Vuc -> -> 0 `i `uc ]
"46
[; ;ADC.c: 46: SwDelay_us(30);
[e ( _SwDelay_us (1 -> -> -> 30 `i `l `ul ]
"47
[; ;ADC.c: 47: *((reg_type8_t)(0x001F)) |=0x04 ;
[e =| *U -> -> 31 `i `*Vuc -> -> 4 `i `uc ]
"48
[; ;ADC.c: 48:     while(( (*((reg_type8_t)(0x001F)) >> 0x04) & 1 ));
[e $U 13  ]
[e :U 14 ]
[e :U 13 ]
[e $ != & >> -> *U -> -> 31 `i `*Vuc `i -> 4 `i -> 1 `i -> 0 `i 14  ]
[e :U 15 ]
"50
[; ;ADC.c: 50: return ((*((reg_type8_t)(0x001E)) << 8) + *((reg_type8_t)(0x009E)));
[e ) -> + << -> *U -> -> 30 `i `*Vuc `i -> 8 `i -> *U -> -> 158 `i `*Vuc `i `ui ]
[e $UE 12  ]
"51
[; ;ADC.c: 51: }
[e :UE 12 ]
}
"53
[; ;ADC.c: 53: void adc_interrupt_routine(void)
[v _adc_interrupt_routine `(v ~T0 @X0 1 ef ]
"54
[; ;ADC.c: 54: {
{
[e :U _adc_interrupt_routine ]
[f ]
"55
[; ;ADC.c: 55: u16_result_data=((*((reg_type8_t)(0x001E))<<8)+*((reg_type8_t)(0x009E)));
[e = _u16_result_data -> + << -> *U -> -> 30 `i `*Vuc `i -> 8 `i -> *U -> -> 158 `i `*Vuc `i `ui ]
"56
[; ;ADC.c: 56: clear_int_flag(0x40);
[e ( _clear_int_flag (1 -> -> 64 `i `uc ]
"57
[; ;ADC.c: 57: }
[e :UE 16 ]
}
